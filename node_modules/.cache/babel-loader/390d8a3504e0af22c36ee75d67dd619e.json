{"ast":null,"code":"var _jsxFileName = \"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ValvingSchedule.js\",\n    _s = $RefreshSig$();\n\nimport { CardDeck, Container, Button, Form, ListGroup, Row, Col } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ModalAddValving from \"./ModalAddValving\";\nimport ModalConfirm from \"./ModalConfirm\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValvingSchedule() {\n  _s();\n\n  const axios = require(\"axios\");\n\n  const [days, setDays] = useState([]);\n  const [time, setTime] = useState(\"10:00\");\n  const [valvingLength, setValvingLength] = useState(0);\n  const [schedules, setSchedules] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [modalShowConfirm, setModalShowConfirm] = useState(false);\n  const [scheduleIdRemove, setScheduleIdRemove] = useState(null);\n  const [error, setError] = useState(false);\n  let history = useHistory();\n  const params = useParams();\n\n  const handleCheckbox = id => {\n    let newArray = [];\n\n    if (!days.includes(id)) {\n      newArray = [...days, id];\n    } else {\n      newArray = days.filter(oldId => id !== oldId);\n    }\n\n    setDays(newArray);\n  };\n\n  const fetchSchedules = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/schedule/all/\" + params.id\n    }).then(res => {\n      if (res.status == 200) {\n        setSchedules(res.data);\n        console.log(res);\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const handleSubmit = () => {\n    setModalShow(false);\n    axios({\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/schedule/\" + params.id,\n      data: {\n        days: days,\n        time: time,\n        valvingLength: valvingLength\n      }\n    }).then(res => {\n      console.log(\"daaata\");\n      console.log(res);\n\n      if (res.status == 200) {\n        fetchSchedules();\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.log(\"after register\");\n      console.error(error);\n    });\n  };\n\n  const deleteSchedule = id => {\n    console.log(id);\n    axios({\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      withCredentials: true,\n      data: {},\n      url: process.env.REACT_APP_API_URL + \"/schedule/\" + id\n    }).then(res => {\n      console.log(res);\n\n      if (res.status == 200) {\n        fetchSchedules();\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const handleConfirm = id => {\n    setModalShowConfirm(false);\n\n    if (id !== null) {\n      deleteSchedule(id);\n    }\n  };\n\n  useEffect(() => {\n    fetchSchedules();\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(ErrorComponent, {\n    onReset: () => setError(true),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"pt-2\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-center\",\n              children: \"Pravideln\\xE9 polievania\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              className: \"mt-2 mr-2\",\n              onClick: () => setModalShow(true),\n              children: \"Pridaj polievanie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ModalAddValving, {\n              show: modalShow,\n              onHide: () => setModalShow(false),\n              title: \"Pridaj pravidelné polievanie\",\n              onSubmit: handleSubmit,\n              setTime: setTime,\n              setValvingLength: setValvingLength,\n              time: time,\n              handleCheckbox: handleCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"pt-3\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: schedules.map(schedule => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: [schedule.days.map(day => day == 1 ? \"Pondelok, \" : day == 2 ? \"Utorok, \" : day == 3 ? \"Streda, \" : day == 4 ? \"Štvrtok, \" : day == 5 ? \"Piatok, \" : day == 6 ? \"Sobota, \" : day == 7 ? \"Nedeľa, \" : null), schedule.hour, \":\", schedule.minutes < 10 ? \"0\" + schedule.minutes : schedule.minutes, \", \", schedule.length, \" min\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"close\",\n                    onClick: () => {\n                      setScheduleIdRemove(schedule.id);\n                      setModalShowConfirm(true);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      \"aria-hidden\": \"true\",\n                      children: \"x\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ModalConfirm, {\n                    show: modalShowConfirm,\n                    title: \"Vymazať rozvrh\",\n                    body: \"Naozaj chceš vymazať tento rozvrh?\",\n                    onSubmit: () => handleConfirm(scheduleIdRemove),\n                    onHide: () => setModalShowConfirm(false)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ValvingSchedule, \"D4JzsJUObSksW+mCmLkbqmRsPkU=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = ValvingSchedule;\nexport default ValvingSchedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValvingSchedule\");","map":{"version":3,"sources":["/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ValvingSchedule.js"],"names":["CardDeck","Container","Button","Form","ListGroup","Row","Col","useState","useEffect","useHistory","useParams","ModalAddValving","ModalConfirm","ErrorComponent","ValvingSchedule","axios","require","days","setDays","time","setTime","valvingLength","setValvingLength","schedules","setSchedules","modalShow","setModalShow","modalShowConfirm","setModalShowConfirm","scheduleIdRemove","setScheduleIdRemove","error","setError","history","params","handleCheckbox","id","newArray","includes","filter","oldId","fetchSchedules","method","withCredentials","url","process","env","REACT_APP_API_URL","then","res","status","data","console","log","Error","catch","handleSubmit","headers","deleteSchedule","handleConfirm","map","schedule","day","hour","minutes","length"],"mappings":"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","sourcesContent":["import {\n  CardDeck,\n  Container,\n  Button,\n  Form,\n  ListGroup,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ModalAddValving from \"./ModalAddValving\";\nimport ModalConfirm from \"./ModalConfirm\";\nimport ErrorComponent from \"../components/ErrorComponent\";\n\nfunction ValvingSchedule() {\n  const axios = require(\"axios\");\n  const [days, setDays] = useState([]);\n  const [time, setTime] = useState(\"10:00\");\n  const [valvingLength, setValvingLength] = useState(0);\n  const [schedules, setSchedules] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [modalShowConfirm, setModalShowConfirm] = useState(false);\n  const [scheduleIdRemove, setScheduleIdRemove] = useState(null);\n  const [error, setError] = useState(false);\n  let history = useHistory();\n  const params = useParams();\n\n  const handleCheckbox = (id) => {\n    let newArray = [];\n    if (!days.includes(id)) {\n      newArray = [...days, id];\n    } else {\n      newArray = days.filter((oldId) => id !== oldId);\n    }\n    setDays(newArray);\n  };\n\n  const fetchSchedules = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/schedule/all/\" + params.id,\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          setSchedules(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleSubmit = () => {\n    setModalShow(false);\n\n    axios({\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/schedule/\" + params.id,\n      data: {\n        days: days,\n        time: time,\n        valvingLength: valvingLength,\n      },\n    })\n      .then((res) => {\n        console.log(\"daaata\");\n        console.log(res);\n        if (res.status == 200) {\n          fetchSchedules();\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.log(\"after register\");\n        console.error(error);\n      });\n  };\n\n  const deleteSchedule = (id) => {\n    console.log(id);\n    axios({\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      withCredentials: true,\n      data: {},\n      url: process.env.REACT_APP_API_URL + \"/schedule/\" + id,\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.status == 200) {\n          fetchSchedules();\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleConfirm = (id) => {\n    setModalShowConfirm(false);\n    if (id !== null) {\n      deleteSchedule(id);\n    }\n  };\n\n  useEffect(() => {\n    fetchSchedules();\n  }, [error]);\n\n  return (\n    <ErrorComponent onReset={() => setError(true)}>\n      <div>\n        <Container className=\"pt-2\">\n          <Row>\n            <Col>\n              <h3 className=\"text-center\">Pravidelné polievania</h3>\n              <Button\n                variant=\"info\"\n                className=\"mt-2 mr-2\"\n                onClick={() => setModalShow(true)}\n              >\n                Pridaj polievanie\n              </Button>\n              <ModalAddValving\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                title={\"Pridaj pravidelné polievanie\"}\n                onSubmit={handleSubmit}\n                setTime={setTime}\n                setValvingLength={setValvingLength}\n                time={time}\n                handleCheckbox={handleCheckbox}\n              />\n            </Col>\n          </Row>\n\n          <Row className=\"pt-3\">\n            <Col>\n              <ListGroup>\n                {schedules.map((schedule) => (\n                  <ListGroup.Item className=\"d-flex\">\n                    <Col>\n                      {schedule.days.map((day) =>\n                        day == 1\n                          ? \"Pondelok, \"\n                          : day == 2\n                          ? \"Utorok, \"\n                          : day == 3\n                          ? \"Streda, \"\n                          : day == 4\n                          ? \"Štvrtok, \"\n                          : day == 5\n                          ? \"Piatok, \"\n                          : day == 6\n                          ? \"Sobota, \"\n                          : day == 7\n                          ? \"Nedeľa, \"\n                          : null\n                      )}\n                      {schedule.hour}:\n                      {schedule.minutes < 10\n                        ? \"0\" + schedule.minutes\n                        : schedule.minutes}\n                      , {schedule.length} min\n                    </Col>\n                    <Col>\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        onClick={() => {\n                          setScheduleIdRemove(schedule.id);\n                          setModalShowConfirm(true);\n                        }}\n                      >\n                        <span aria-hidden=\"true\">x</span>\n                      </button>\n                      <ModalConfirm\n                        show={modalShowConfirm}\n                        title={\"Vymazať rozvrh\"}\n                        body={\"Naozaj chceš vymazať tento rozvrh?\"}\n                        onSubmit={() => handleConfirm(scheduleIdRemove)}\n                        onHide={() => setModalShowConfirm(false)}\n                      />\n                    </Col>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </ErrorComponent>\n  );\n}\n\nexport default ValvingSchedule;\n"]},"metadata":{},"sourceType":"module"}