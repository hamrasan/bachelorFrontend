{"ast":null,"code":"var _jsxFileName = \"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/TheHome.js\",\n    _s = $RefreshSig$();\n\nimport { Container, CardDeck, Card, Button, Accordion } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport ModalSetSensorsTime from \"../components/ModalSetSensorsTime\";\nimport SensorsGarden from \"./SensorsGarden\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TheHome() {\n  _s();\n\n  const axios = require(\"axios\");\n\n  const [userTemp, setUserTemp] = useState(15);\n  const [minutes, setMinutes] = useState(15);\n  const [modalShowTemp, setModalShowTemp] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [gardenId, setGardenId] = useState(null);\n  const [gardens, setGardens] = useState([]);\n  const [error, setError] = useState(false);\n  const handleError = useErrorHandler();\n\n  const fetchGardens = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/garden/all\"\n    }).then(res => {\n      if (res.status == 200) {\n        setGardens(res.data);\n        console.log(res);\n      } else throw Error(res.status);\n    }).catch(error => {\n      handleError(error);\n      console.error(error);\n    });\n  };\n\n  const setRefreshData = () => {\n    axios.get(process.env.REACT_APP_API_URL + \"/sensors/request/\" + minutes);\n  };\n\n  const handleSubmit = minutes => {\n    setRefreshData(minutes);\n    setModalShow(false);\n  };\n\n  useEffect(() => {\n    fetchGardens();\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(ErrorComponent, {\n    onReset: () => setError(true),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: \"pt-3 w-75\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-baseline\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Interval merania je \", minutes, \" min\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              className: \"mb-4 ml-2\",\n              onClick: () => setModalShow(true),\n              children: \"Zmeni\\u0165\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ModalSetSensorsTime, {\n            show: modalShow,\n            onHide: () => setModalShow(false),\n            title: \"Zmeň časový interval merania senzorov\",\n            bodyTitle: \"Vyber časový interval v min:\",\n            bodyText: \"interval\",\n            setMinutes: setMinutes,\n            minutes: minutes,\n            onSubmit: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), gardens.map(garden => /*#__PURE__*/_jsxDEV(Accordion, {\n          defaultActiveKey: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Card.Header,\n              eventKey: \"0\",\n              children: garden.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n              eventKey: \"0\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(SensorsGarden, {\n                  gardenId: garden.id,\n                  gardenName: garden.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 16\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TheHome, \"DfU+MXgQn2YONvJV+372hqj5RyQ=\", false, function () {\n  return [useErrorHandler];\n});\n\n_c = TheHome;\nexport default TheHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"TheHome\");","map":{"version":3,"sources":["/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/TheHome.js"],"names":["Container","CardDeck","Card","Button","Accordion","useState","useEffect","ModalSetSensorsTime","SensorsGarden","ErrorComponent","useErrorHandler","TheHome","axios","require","userTemp","setUserTemp","minutes","setMinutes","modalShowTemp","setModalShowTemp","modalShow","setModalShow","gardenId","setGardenId","gardens","setGardens","error","setError","handleError","fetchGardens","method","withCredentials","url","process","env","REACT_APP_API_URL","then","res","status","data","console","log","Error","catch","setRefreshData","get","handleSubmit","map","garden","Header","name","id"],"mappings":"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","sourcesContent":["import { Container, CardDeck, Card, Button, Accordion } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport ModalSetSensorsTime from \"../components/ModalSetSensorsTime\";\nimport SensorsGarden from \"./SensorsGarden\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\n\n\nfunction TheHome() {\n  const axios = require(\"axios\");\n  const [userTemp, setUserTemp] = useState(15);\n  const [minutes, setMinutes] = useState(15);\n  const [modalShowTemp, setModalShowTemp] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [gardenId, setGardenId] = useState(null);\n  const [gardens, setGardens] = useState([]);\n  const [error, setError] = useState(false);\n  const handleError = useErrorHandler();\n\n   const fetchGardens = () => {\n      axios({\n        method: \"get\",\n        withCredentials: true,\n        url: process.env.REACT_APP_API_URL + \"/garden/all\",\n      })\n        .then((res) => {\n          if ((res.status == 200)) {\n            setGardens(res.data);\n            console.log(res);\n          }else throw Error(res.status);\n        })\n        .catch((error) => {\n          handleError(error);\n          console.error(error);\n        });\n    };\n\n  const setRefreshData = () => {\n    axios.get(process.env.REACT_APP_API_URL + \"/sensors/request/\" + minutes);\n  };\n\n  const handleSubmit = (minutes) => {\n    setRefreshData(minutes);\n    setModalShow(false);\n  };\n\n  useEffect(() => {\n    fetchGardens();\n  }, [error]);\n\n  return (\n    <ErrorComponent onReset={ () => setError(true)}>\n    <div>\n      <Container fluid className=\"pt-3 w-75\">\n        <div className=\"d-flex justify-content-between\">\n          <div className=\"d-flex align-items-baseline\">\n            <h6>\n              Interval merania je {minutes} min\n            </h6>\n            <Button\n              variant=\"info\"\n              className=\"mb-4 ml-2\"\n              onClick={() => setModalShow(true)}\n            >\n              Zmeniť\n            </Button>\n          </div>\n          <ModalSetSensorsTime\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n          title={\"Zmeň časový interval merania senzorov\"}\n          bodyTitle={\"Vyber časový interval v min:\"}\n          bodyText={\"interval\"}\n          setMinutes={setMinutes}\n          minutes={minutes}\n          onSubmit={handleSubmit}\n        />\n        </div>\n\n        {gardens.map(garden =>(\n          <Accordion defaultActiveKey=\"1\">\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              {garden.name}\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n              {<SensorsGarden gardenId={garden.id} gardenName={garden.name}></SensorsGarden>}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        ))}\n      </Container>\n    </div>\n    </ErrorComponent>\n  );\n}\n\nexport default TheHome;\n"]},"metadata":{},"sourceType":"module"}