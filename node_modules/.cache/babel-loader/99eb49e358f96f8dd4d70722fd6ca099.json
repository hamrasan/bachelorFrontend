{"ast":null,"code":"var _jsxFileName = \"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/PlantNewForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Container, Button, Card, CardDeck, CardGroup } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport TheSpinner from \"../components/TheSpinner\";\nimport SelectPlants from \"../components/SelectPlants\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PlantNewForm(props) {\n  _s();\n\n  const axios = require(\"axios\");\n\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [plant, setPlant] = useState(null);\n  const [plantName, setPlantName] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [subcategoryName, setSubcategoryName] = useState(\"\");\n  const [dateOfPlant, setDateOfPlant] = useState(new Date());\n  const [minTemperature, setMinTemperature] = useState(null);\n  const [maxTemperature, setMaxTemperature] = useState(null);\n  const [season, setSeason] = useState(\"\");\n  const [error, setError] = useState(false);\n  let history = useHistory();\n  const handleError = useErrorHandler();\n  const params = useParams();\n  useEffect(() => {\n    getCategories();\n  }, [error]);\n\n  const getCategories = () => {\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/categories\",\n      withCredentials: true\n    }).then(res => {\n      if (res.status == 200) {\n        setCategories(res.data);\n      } else throw Error(res.status);\n    }).catch(error => {\n      handleError(error);\n      console.error(error);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"dateOfPlant \" + dateOfPlant);\n    console.log(plant);\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/plants\",\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        date: dateOfPlant,\n        plant: plant.id,\n        minTemperature: minTemperature,\n        maxTemperature: maxTemperature,\n        season: season,\n        garden: params.name\n      }\n    }).then(res => {\n      if (res.status == 200) {\n        console.log(\"plant was send\");\n        history.push(\"/garden\");\n      } else throw Error(res.status);\n    }).catch(error => {\n      handleError(error);\n      console.error(error);\n    });\n  };\n\n  const setActualPlantInfo = plant => {\n    setPlant(plant);\n    setPlantName(plant.name);\n    setMinTemperature(plant.minTemperature);\n    setMaxTemperature(plant.maxTemperature);\n    setSeason(plant.season);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ErrorComponent, {\n    onReset: () => setError(true),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Pridanie novej pestovanej rastliny\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"exampleForm.ControlSelect1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Kateg\\xF3ria\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  onChange: e => {\n                    setCategoryName(e.target.value);\n                    setSubcategoryName(\"\");\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"default\",\n                    selected: \"selected\",\n                    children: \"Vyber z mo\\u017Enost\\xED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 21\n                  }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: category.name,\n                    children: category.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), categoryName !== \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"exampleForm.ControlSelect1\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Podkateg\\xF3ria\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    onChange: e => {\n                      setSubcategoryName(e.target.value);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"default\",\n                      selected: \"selected\",\n                      children: \"Vyber z mo\\u017Enost\\xED\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 25\n                    }, this), categories.filter(category => category.name == categoryName).map(category => category.subcategoryNames.map(subcategory => subcategory === \"None\" ? /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: subcategory,\n                      children: \"Bez podkateg\\xF3rie\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 33\n                    }, this) : /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: subcategory,\n                      children: subcategory\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 33\n                    }, this)))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(SelectPlants, {\n                    subcategory: subcategoryName,\n                    category: categoryName,\n                    setActualPlantInfo: setActualPlantInfo,\n                    plant: plant\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      style: {\n                        color: \"green\"\n                      },\n                      children: plantName !== \"\" ? plantName : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: [\" \", \"Minim\\xE1lna mo\\u017En\\xE1 teplota rastliny\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        value: minTemperature,\n                        onChange: e => {\n                          setMinTemperature(e.target.value);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: [\" \", \"Maxim\\xE1lna mo\\u017En\\xE1 teplota rastliny\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        value: maxTemperature,\n                        onChange: e => {\n                          setMaxTemperature(e.target.value);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \" Sez\\xF3na rastliny\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        value: season,\n                        onChange: e => {\n                          setSeason(e.target.value);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      controlId: \"exampleForm.ControlSelect1\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"D\\xE1tum zasadenia \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                          selected: dateOfPlant,\n                          className: \"form-control\",\n                          onChange: date => setDateOfPlant(date),\n                          dateFormat: \"y-MM-dd\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      as: Row,\n                      children: /*#__PURE__*/_jsxDEV(Col, {\n                        className: \"d-flex justify-content-right\",\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          type: \"submit\",\n                          children: \"Prida\\u0165\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlantNewForm, \"hUudIg6Q9OEnuKrUyQofHmptfHk=\", false, function () {\n  return [useHistory, useErrorHandler, useParams];\n});\n\n_c = PlantNewForm;\nexport default PlantNewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantNewForm\");","map":{"version":3,"sources":["/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/PlantNewForm.js"],"names":["useState","useEffect","Form","Row","Col","Container","Button","Card","CardDeck","CardGroup","useHistory","useParams","DatePicker","TheSpinner","SelectPlants","ErrorComponent","useErrorHandler","PlantNewForm","props","axios","require","categoryName","setCategoryName","plant","setPlant","plantName","setPlantName","categories","setCategories","subcategoryName","setSubcategoryName","dateOfPlant","setDateOfPlant","Date","minTemperature","setMinTemperature","maxTemperature","setMaxTemperature","season","setSeason","error","setError","history","handleError","params","getCategories","method","url","process","env","REACT_APP_API_URL","withCredentials","then","res","status","data","Error","catch","console","handleSubmit","e","preventDefault","log","headers","date","id","garden","name","push","setActualPlantInfo","target","value","map","category","filter","subcategoryNames","subcategory","color"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  Form,\n  Row,\n  Col,\n  Container,\n  Button,\n  Card,\n  CardDeck,\n  CardGroup,\n} from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport TheSpinner from \"../components/TheSpinner\";\nimport SelectPlants from \"../components/SelectPlants\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\n\nfunction PlantNewForm(props) {\n  const axios = require(\"axios\");\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [plant, setPlant] = useState(null);\n  const [plantName, setPlantName] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [subcategoryName, setSubcategoryName] = useState(\"\");\n  const [dateOfPlant, setDateOfPlant] = useState(new Date());\n  const [minTemperature, setMinTemperature] = useState(null);\n  const [maxTemperature, setMaxTemperature] = useState(null);\n  const [season, setSeason] = useState(\"\");\n  const [error, setError] = useState(false);\n  let history = useHistory();\n  const handleError = useErrorHandler();\n  const params = useParams();\n\n  useEffect(() => {\n    getCategories();\n  }, [error]);\n\n  const getCategories = () => {\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/categories\",\n      withCredentials: true,\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          setCategories(res.data);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        handleError(error);\n        console.error(error);\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"dateOfPlant \" + dateOfPlant);\n    console.log(plant);\n\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/plants\",\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      data: {\n        date: dateOfPlant,\n        plant: plant.id,\n        minTemperature: minTemperature,\n        maxTemperature: maxTemperature,\n        season: season,\n        garden: params.name,\n      },\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(\"plant was send\");\n          history.push(\"/garden\");\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        handleError(error);\n        console.error(error);\n      });\n  };\n\n  const setActualPlantInfo = (plant) =>{\n    setPlant(plant);\n    setPlantName(plant.name);\n    setMinTemperature(plant.minTemperature);\n    setMaxTemperature(plant.maxTemperature);\n    setSeason(plant.season);\n  }\n\n  return (\n    <ErrorComponent onReset={() => setError(true)}>\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <h2 className=\"text-center\">\n                Pridanie novej pestovanej rastliny\n              </h2>\n            </Col>\n          </Row>\n\n          {/* <Row className=\"mb-3\">\n          <Col className=\"d-flex flex-row-reverse\">\n            <Button variant=\"outline-success\">Upraviť</Button>{\" \"}\n          </Col>\n        </Row> */}\n\n          <Row>\n            <Col>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                  <Form.Label>Kategória</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    onChange={(e) => {\n                      setCategoryName(e.target.value);\n                      setSubcategoryName(\"\");\n                    }}\n                  >\n                    <option value=\"default\" selected=\"selected\">\n                      Vyber z možností\n                    </option>\n                    {categories.map((category) => (\n                      <option value={category.name}>{category.name}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n\n                {categoryName !== \"\" ? (\n                  <>\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                      <Form.Label>Podkategória</Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        onChange={(e) => {\n                          setSubcategoryName(e.target.value);\n                        }}\n                      >\n                        <option value=\"default\" selected=\"selected\">\n                          Vyber z možností\n                        </option>\n                        {categories\n                          .filter((category) => category.name == categoryName)\n                          .map((category) =>\n                            category.subcategoryNames.map((subcategory) =>\n                              subcategory === \"None\" ? (\n                                <option value={subcategory}>\n                                  Bez podkategórie\n                                </option>\n                              ) : (\n                                <option value={subcategory}>\n                                  {subcategory}\n                                </option>\n                              )\n                            )\n                          )}\n                      </Form.Control>\n                    </Form.Group>\n\n                    <Row>\n                      <SelectPlants\n                        subcategory={subcategoryName}\n                        category={categoryName}\n                        setActualPlantInfo={setActualPlantInfo}\n                        plant={plant}\n                      ></SelectPlants>\n\n                      <Col>\n                          <h4 style={{ color: \"green\" }}>\n                            {plantName !== \"\" ? plantName : \"\"}\n                          </h4>\n                          <Form.Group>\n                            <Form.Label>\n                              {\" \"}\n                              Minimálna možná teplota rastliny\n                            </Form.Label>\n                            <Form.Control\n                              type=\"text\"\n                              value={minTemperature}\n                              onChange={(e) => {\n                                setMinTemperature(e.target.value);\n                              }}\n                            />\n                          </Form.Group>\n\n                          <Form.Group>\n                            <Form.Label>\n                              {\" \"}\n                              Maximálna možná teplota rastliny\n                            </Form.Label>\n                            <Form.Control\n                              type=\"text\"\n                              value={maxTemperature}\n                              onChange={(e) => {\n                                setMaxTemperature(e.target.value);\n                              }}\n                            />\n                          </Form.Group>\n\n                          <Form.Group>\n                            <Form.Label> Sezóna rastliny</Form.Label>\n                            <Form.Control\n                              type=\"text\"\n                              value={season}\n                              onChange={(e) => {\n                                setSeason(e.target.value);\n                              }}\n                            />\n                          </Form.Group>\n\n                          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>Dátum zasadenia </Form.Label>\n                            <div>\n                              <DatePicker\n                                selected={dateOfPlant}\n                                className=\"form-control\"\n                                onChange={(date) => setDateOfPlant(date)}\n                                dateFormat=\"y-MM-dd\"\n                              />\n                            </div>\n                          </Form.Group>\n\n                          <Form.Group as={Row}>\n                            <Col className=\"d-flex justify-content-right\">\n                              <Button type=\"submit\">Pridať</Button>\n                            </Col>\n                          </Form.Group>\n                      </Col>\n                    </Row>\n                  </>\n                ) : null}\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n\n        <Container>\n          <Row>\n            {/* <Col style={{ overflow: \"scroll\", height: \"500px\" }}>\n              \n            </Col> */}\n          </Row>\n        </Container>\n      </div>\n    </ErrorComponent>\n  );\n}\n\nexport default PlantNewForm;\n"]},"metadata":{},"sourceType":"module"}