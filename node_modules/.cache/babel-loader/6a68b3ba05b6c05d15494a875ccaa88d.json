{"ast":null,"code":"var _jsxFileName = \"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ValveCard.js\",\n    _s = $RefreshSig$();\n\nimport { Card, CardColumns, CardGroup, Button } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MyVerticallyCenteredModal from \"./MyVerticallyCenteredModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValveCard(props) {\n  _s();\n\n  const styleImg = {\n    maxHeight: \"150px\",\n    maxWidth: \"150px\"\n  };\n  const sensor = props.sensor;\n  const [modalShowGardens, setModalShowGardens] = useState(false);\n  const [modalShowValving, setModalShowValving] = useState(false);\n\n  const handleSubmitGardens = gardens => {\n    console.log(gardens);\n    props.updateGardens(props.valve.id, gardens);\n    setModalShowGardens(false);\n  };\n\n  const handleSubmitImmediately = length => {\n    console.log(length);\n    props.valvingImmediately(props.valve.name, length);\n    setModalShowValving(false);\n  };\n\n  useEffect(() => {}, [props.valve.gardens]);\n  return /*#__PURE__*/_jsxDEV(CardGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4 mr-0\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: props.valve.picture,\n        style: styleImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\"Polieva\\u010D \", props.number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"V z\\xE1hrade:\", /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: props.valve.gardens.map((garden, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [garden.name, index < props.valve.gardens.length - 1 ? \", \" : \" \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 68\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4 mr-0\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          className: \"mt-2 mr-2\",\n          onClick: () => setModalShowValving(true),\n          children: \"Zalej ihne\\u010F!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n          show: modalShowValving,\n          onHide: () => setModalShowValving(false),\n          title: \"Zalej ihneď!\",\n          bodyTitle: \"Zadaj dĺžku zalievania (v min):\",\n          bodyText: \"immediately\",\n          onSubmit: handleSubmitImmediately\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/valving/schedule/\" + props.valve.name,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            className: \"mt-2 mr-2\",\n            children: \"Pravideln\\xE9 polievanie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          className: \"mt-2 mr-2\",\n          onClick: () => setModalShowGardens(true),\n          children: \"Prida\\u0165/odobra\\u0165 z\\xE1hradu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n          show: modalShowGardens,\n          onHide: () => setModalShowGardens(false),\n          title: \"Pridať/odobrať záhradu\",\n          bodyTitle: \"Vyber z možností:\",\n          bodyText: \"gardens\",\n          gardens: props.gardens,\n          onSubmit: handleSubmitGardens\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ValveCard, \"bWADeu+EztCGO1gUYScR5xlr9cA=\");\n\n_c = ValveCard;\nexport default ValveCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValveCard\");","map":{"version":3,"sources":["/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ValveCard.js"],"names":["Card","CardColumns","CardGroup","Button","useState","useEffect","Link","MyVerticallyCenteredModal","ValveCard","props","styleImg","maxHeight","maxWidth","sensor","modalShowGardens","setModalShowGardens","modalShowValving","setModalShowValving","handleSubmitGardens","gardens","console","log","updateGardens","valve","id","handleSubmitImmediately","length","valvingImmediately","name","picture","number","map","garden","index"],"mappings":"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","sourcesContent":["import { Card, CardColumns, CardGroup, Button } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MyVerticallyCenteredModal from \"./MyVerticallyCenteredModal\";\n\nfunction ValveCard(props) {\n  \n  const styleImg = {\n    maxHeight: \"150px\",\n    maxWidth: \"150px\",\n  };\n\n  const sensor = props.sensor;\n  const [modalShowGardens, setModalShowGardens] = useState(false);\n  const [modalShowValving, setModalShowValving] = useState(false);\n\n  const handleSubmitGardens = (gardens) =>{\n      console.log(gardens);\n      props.updateGardens(props.valve.id, gardens);\n      setModalShowGardens(false);\n  }\n\n  const handleSubmitImmediately = (length) =>{\n    console.log(length);\n    props.valvingImmediately(props.valve.name, length);\n    setModalShowValving(false);\n}\n    \n  useEffect(() => {\n\n  }, [props.valve.gardens])\n\n\n  return (\n    <CardGroup>\n      <Card className=\"mb-4 mr-0\">\n        <Card.Img variant=\"top\" src={props.valve.picture} style={styleImg} />\n        <Card.Body>\n          <Card.Title>Polievač {props.number}</Card.Title>\n          <Card.Text>\n            V záhrade:\n            <Card.Text>{props.valve.gardens.map((garden, index) => <span>{garden.name}{index<props.valve.gardens.length-1 ? \", \": \" \"} </span>)}\n            </Card.Text>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n      <Card className=\"mb-4 mr-0\">\n        <Card.Body>\n            <Button variant=\"info\" className=\"mt-2 mr-2\"\n             onClick={() => setModalShowValving(true)}\n            >\n              Zalej ihneď!\n            </Button>\n            <MyVerticallyCenteredModal\n            show={modalShowValving}\n            onHide={() => setModalShowValving(false)}\n            title={\"Zalej ihneď!\"}\n            bodyTitle = {\"Zadaj dĺžku zalievania (v min):\"}\n            bodyText={\"immediately\"}\n            onSubmit={handleSubmitImmediately}\n          />\n          <Link to={\"/valving/schedule/\" + props.valve.name}>\n            <Button variant=\"info\" className=\"mt-2 mr-2\">\n              Pravidelné polievanie\n            </Button>\n          </Link>\n          <Button\n            variant=\"info\"\n            className=\"mt-2 mr-2\"\n            onClick={() => setModalShowGardens(true)}\n          >\n            Pridať/odobrať záhradu\n          </Button>\n          <MyVerticallyCenteredModal\n            show={modalShowGardens}\n            onHide={() => setModalShowGardens(false)}\n            title={\"Pridať/odobrať záhradu\"}\n            bodyTitle = {\"Vyber z možností:\"}\n            bodyText={\"gardens\"}\n            gardens={props.gardens}\n            onSubmit={handleSubmitGardens}\n          />\n        </Card.Body>\n      </Card>\n    </CardGroup>\n  );\n}\n\nexport default ValveCard;\n"]},"metadata":{},"sourceType":"module"}