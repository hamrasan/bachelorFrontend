{"ast":null,"code":"var _jsxFileName = \"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/MyVerticallyCenteredModal.js\",\n    _s = $RefreshSig$();\n\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyVerticallyCenteredModal(props) {\n  _s();\n\n  const [valveGardens, setValveGardens] = useState([]);\n  const [idValve, setIdValve] = useState(\"\");\n  const [length, setLength] = useState(0);\n  const [location, setLocation] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const handleCheckbox = id => {\n    let newArray = [];\n\n    if (!valveGardens.includes(id)) {\n      newArray = [...valveGardens, id];\n    } else {\n      newArray = valveGardens.filter(oldId => id !== oldId);\n    }\n\n    setValveGardens(newArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.bodyTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [props.bodyText === \"gardens\" ? props.gardens.map(garden => /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicCheckbox\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              onClick: () => handleCheckbox(garden.id),\n              type: \"checkbox\",\n              defaultChecked: valveGardens.includes(garden.id),\n              label: garden.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                onChange: e => {\n                  if (props.bodyText === \"addValve\") setIdValve(e.target.value);else if (props.bodyText === \"immediately\") setLength(e.target.value);else if (props.bodyText === \"addGarden\") setName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), props.bodyText === \"addGarden\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: props.bodySubTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: e => {\n                    setLocation(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => props.onSubmit(props.bodyText === \"gardens\" ? valveGardens : props.bodyText === \"addValve\" ? idValve : props.bodyText === \"immediately\" ? length : name, location),\n        children: \"Potvrdi\\u0165\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Zatvori\\u0165\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyVerticallyCenteredModal, \"ztVmY9L4tSyVIB00Y9H2wyrrjNA=\");\n\n_c = MyVerticallyCenteredModal;\nexport default MyVerticallyCenteredModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyVerticallyCenteredModal\");","map":{"version":3,"sources":["/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/MyVerticallyCenteredModal.js"],"names":["Modal","Button","Form","useState","MyVerticallyCenteredModal","props","valveGardens","setValveGardens","idValve","setIdValve","length","setLength","location","setLocation","name","setName","handleCheckbox","id","newArray","includes","filter","oldId","title","bodyTitle","bodyText","gardens","map","garden","e","target","value","bodySubTitle","onSubmit","onHide"],"mappings":"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","sourcesContent":["import { Modal, Button, Form } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nfunction MyVerticallyCenteredModal(props) {\n  const [valveGardens, setValveGardens] = useState([]);\n  const [idValve, setIdValve] = useState(\"\");\n  const [length, setLength] = useState(0);\n  const [location, setLocation] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const handleCheckbox = (id) => {\n    let newArray = [];\n    if (!valveGardens.includes(id)) {\n      newArray = [...valveGardens, id];\n    } else {\n      newArray = valveGardens.filter((oldId) => id !== oldId);\n    }\n    setValveGardens(newArray);\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {props.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>{props.bodyTitle}</h4>\n        <p>\n          <Form>\n            {props.bodyText === \"gardens\" ? (\n              props.gardens.map((garden) => (\n                <Form.Group controlId=\"formBasicCheckbox\">\n                  <Form.Check\n                    inline\n                    onClick={() => handleCheckbox(garden.id)}\n                    type=\"checkbox\"\n                    defaultChecked={valveGardens.includes(garden.id)} \n                    label={garden.name}\n                  />\n                </Form.Group>\n              ))\n            ) : (\n              <Form.Group>\n                <Form.Row>\n                  <Form.Control\n                    onChange={(e) => {\n                      if (props.bodyText === \"addValve\")\n                        setIdValve(e.target.value);\n                      else if (props.bodyText === \"immediately\")\n                        setLength(e.target.value);\n                      else if (props.bodyText === \"addGarden\")\n                        setName(e.target.value);\n                    }}\n                  />\n                </Form.Row>\n              </Form.Group>\n            )}\n            {props.bodyText === \"addGarden\" ? (\n              <div>\n              <h4>{props.bodySubTitle}</h4>\n              <Form.Group>\n                <Form.Row>\n                  <Form.Control\n                    onChange={(e) => {\n                        setLocation(e.target.value);\n                    }}\n                  />\n                </Form.Row>\n              </Form.Group>          \n              </div>\n            ) : null}\n          </Form>\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          onClick={() =>\n            props.onSubmit(\n              props.bodyText === \"gardens\"\n                ? valveGardens\n                : props.bodyText === \"addValve\"\n                ? idValve\n                : props.bodyText === \"immediately\"\n                ? length\n                : name,location\n            )\n          }\n        >\n          Potvrdiť\n        </Button>\n        <Button onClick={props.onHide}>Zatvoriť</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default MyVerticallyCenteredModal;\n"]},"metadata":{},"sourceType":"module"}