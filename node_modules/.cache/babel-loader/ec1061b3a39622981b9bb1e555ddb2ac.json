{"ast":null,"code":"var _jsxFileName = \"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/SensorsGarden.js\",\n    _s = $RefreshSig$();\n\nimport { Container, CardDeck, Button } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport SensorCard from \"../components/SensorCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SensorsGarden(props) {\n  _s();\n\n  const axios = require(\"axios\");\n\n  const [temperature, setTemperature] = useState(null);\n  const [temperatureHistory, setTemperatureHistory] = useState([]);\n  const [humidity, setHumidity] = useState(null);\n  const [humidityHistory, setHumidityHistory] = useState([]);\n  const [pressure, setPressure] = useState(null);\n  const [pressureHistory, setPressureHistory] = useState([]);\n  const [soil, setSoil] = useState(null);\n  const [soilHistory, setSoilHistory] = useState([]);\n  const [rain, setRain] = useState(null);\n  const [rainHistory, setRainHistory] = useState([]);\n\n  const fetchTemperature = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/temperature/\" + props.gardenId\n    }).then(res => {\n      if (res.status == 200 && res.data != \"\") {\n        setTemperature(res.data);\n        console.log(res);\n      } else if (res.status != 200) throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const fetchHistoryTemperature = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/temperature/\" + props.gardenId\n    }).then(res => {\n      if (res.status == 200) {\n        setTemperatureHistory(res.data);\n        console.log(res);\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const fetchSoil = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/soil/\" + props.gardenId\n    }).then(res => {\n      if (res.status == 200 && res.data != \"\") {\n        setSoil(res.data);\n        console.log(res);\n      } else if (res.status != 200) throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const fetchHistorySoil = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/soil/\" + props.gardenId\n    }).then(res => {\n      if (res.status == 200) {\n        setSoilHistory(res.data);\n        console.log(res);\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const fetchPressure = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/pressure/\" + props.gardenId\n    }).then(res => {\n      if (res.status == 200 && res.data != \"\") {\n        setPressure(res.data);\n        console.log(res);\n      } else if (res.status != 200) throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const fetchHistoryPressure = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/pressure/\" + props.gardenId\n    }).then(res => {\n      if (res.status == 200) {\n        setPressureHistory(res.data);\n        console.log(res);\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const fetchHumidity = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/humidity/\" + props.gardenId\n    }).then(res => {\n      if (res.status == 200 && res.data != \"\") {\n        setHumidity(res.data);\n        console.log(res);\n        console.log(\"humidity\");\n      } else if (res.status != 200) throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const fetchHistoryHumidity = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/humidity/\" + props.gardenId\n    }).then(res => {\n      if (res.status == 200) {\n        setHumidityHistory(res.data);\n        console.log(res);\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const fetchRain = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/rain/\" + props.gardenId\n    }).then(res => {\n      if (res.status == 200 && res.data != \"\") {\n        setRain(res.data);\n        console.log(res);\n      } else if (res.status != 200) throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const fetchHistoryRain = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/rain/\" + props.gardenId\n    }).then(res => {\n      if (res.status == 200) {\n        setRainHistory(res.data);\n        console.log(res);\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    fetchTemperature();\n    fetchHumidity();\n    fetchPressure();\n    fetchRain();\n    fetchSoil();\n    fetchHistoryRain();\n    fetchHistorySoil();\n    fetchHistoryHumidity();\n    fetchHistoryTemperature();\n    fetchHistoryPressure();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CardDeck, {\n      className: \"d-xl-flex justify-content-lg-center\",\n      children: [/*#__PURE__*/_jsxDEV(SensorCard, {\n        pathName: \"temperature\",\n        sensor: temperature,\n        name: \"Teplota\",\n        text: temperature !== null ? temperature.value + \" °C\" : \"Senzor nie je dostupný\",\n        gardenName: props.gardenName,\n        history: temperatureHistory.map(temperature => {\n          return {\n            date: temperature.date,\n            value: temperature.value + \" °C\"\n          };\n        }),\n        picture: \"assets/sensors/teplomer.png\"\n      }, \"temperature\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SensorCard, {\n        pathName: \"pressure\",\n        sensor: pressure,\n        name: \"Tlak vzduchu\",\n        text: pressure !== null ? pressure.value + \" hPa\" : \"Senzor nie je dostupný\",\n        gardenName: props.gardenName,\n        history: pressureHistory.map(pressure => {\n          return {\n            date: pressure.date,\n            value: pressure.value + \" hPa\"\n          };\n        }),\n        picture: \"assets/sensors/pressure.png\"\n      }, \"pressure\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SensorCard, {\n        pathName: \"humidity\",\n        sensor: humidity,\n        name: \"Vlhkos\\u0165 vzduchu\",\n        text: humidity !== null ? humidity.value + \" %\" : \"Senzor nie je dostupný\",\n        gardenName: props.gardenName,\n        history: humidityHistory.map(humidity => {\n          return {\n            date: humidity.date,\n            value: humidity.value + \" %\"\n          };\n        }),\n        picture: \"assets/sensors/humidity.png\"\n      }, \"humidity\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SensorCard, {\n        pathName: \"soil\",\n        sensor: soil,\n        name: \"Vlhkos\\u0165 p\\xF4dy\",\n        text: soil !== null ? soil.value + \" %\" : \"Senzor nie je dostupný\",\n        gardenName: props.gardenName,\n        history: soilHistory.map(soil => {\n          return {\n            date: soil.date,\n            value: soil.value + \" %\"\n          };\n        }),\n        picture: \"assets/sensors/soil.png\"\n      }, \"soil\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this), rain != null ? /*#__PURE__*/_jsxDEV(SensorCard, {\n        pathName: \"rain\",\n        sensor: rain,\n        name: \"Zr\\xE1\\u017Eky\",\n        gardenName: props.gardenName,\n        history: rainHistory.map(rain => {\n          return {\n            date: rain.date,\n            value: rain.raining ? \"Prší\" : \"Neprší\"\n          };\n        }),\n        text: rain.raining ? \"Prší\" : \"V tomto okamžiku neprší\",\n        picture: rain.raining ? \"assets/sensors/rain.jpg\" : \"assets/sensors/sun.jpg\"\n      }, \"rain\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SensorsGarden, \"HnkBKax8kf3zUitS+hAlwfBH/CY=\");\n\n_c = SensorsGarden;\nexport default SensorsGarden;\n\nvar _c;\n\n$RefreshReg$(_c, \"SensorsGarden\");","map":{"version":3,"sources":["/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/SensorsGarden.js"],"names":["Container","CardDeck","Button","useState","useEffect","SensorCard","SensorsGarden","props","axios","require","temperature","setTemperature","temperatureHistory","setTemperatureHistory","humidity","setHumidity","humidityHistory","setHumidityHistory","pressure","setPressure","pressureHistory","setPressureHistory","soil","setSoil","soilHistory","setSoilHistory","rain","setRain","rainHistory","setRainHistory","fetchTemperature","method","withCredentials","url","process","env","REACT_APP_API_URL","gardenId","then","res","status","data","console","log","Error","catch","error","fetchHistoryTemperature","fetchSoil","fetchHistorySoil","fetchPressure","fetchHistoryPressure","fetchHumidity","fetchHistoryHumidity","fetchRain","fetchHistoryRain","value","gardenName","map","date","raining"],"mappings":"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","sourcesContent":["import { Container, CardDeck, Button } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport SensorCard from \"../components/SensorCard\";\n\nfunction SensorsGarden(props) {\n  const axios = require(\"axios\");\n  const [temperature, setTemperature] = useState(null);\n  const [temperatureHistory, setTemperatureHistory] = useState([]);\n  const [humidity, setHumidity] = useState(null);\n  const [humidityHistory, setHumidityHistory] = useState([]);\n  const [pressure, setPressure] = useState(null);\n  const [pressureHistory, setPressureHistory] = useState([]);\n  const [soil, setSoil] = useState(null);\n  const [soilHistory, setSoilHistory] = useState([]);\n  const [rain, setRain] = useState(null);\n  const [rainHistory, setRainHistory] = useState([]);\n\n  const fetchTemperature = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/temperature/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200) && (res.data != \"\")) {\n          setTemperature(res.data);\n          console.log(res);\n        } else if((res.status != 200)) throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHistoryTemperature = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/temperature/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setTemperatureHistory(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchSoil = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/soil/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200) && (res.data != \"\")) {\n          setSoil(res.data);\n          console.log(res);\n        } \n        else if((res.status != 200)) throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHistorySoil = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/soil/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setSoilHistory(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchPressure = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/pressure/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200) && (res.data != \"\")) {\n          setPressure(res.data);\n          console.log(res);\n        } else if((res.status != 200)) throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHistoryPressure = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/pressure/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setPressureHistory(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHumidity = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/humidity/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200) && (res.data != \"\")) {\n          setHumidity(res.data);\n          console.log(res);\n          console.log(\"humidity\");\n        } else if((res.status != 200)) throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHistoryHumidity = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/humidity/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setHumidityHistory(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchRain = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/rain/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200) && (res.data != \"\")) {\n          setRain(res.data);\n          console.log(res);\n        } else if((res.status != 200)) throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHistoryRain = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/rain/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setRainHistory(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    fetchTemperature();\n    fetchHumidity();\n    fetchPressure();\n    fetchRain();\n    fetchSoil();\n    fetchHistoryRain();\n    fetchHistorySoil();\n    fetchHistoryHumidity();\n    fetchHistoryTemperature();\n    fetchHistoryPressure();\n  }, []);\n\n  return (\n    <div>\n          <CardDeck className=\"d-xl-flex justify-content-lg-center\">\n            <SensorCard\n              key=\"temperature\"\n              pathName=\"temperature\"\n              sensor={temperature}\n              name=\"Teplota\"\n              text={temperature !== null ? temperature.value + \" °C\" : \"Senzor nie je dostupný\"}\n              gardenName={props.gardenName}\n              history={temperatureHistory.map((temperature) => {\n                return { date: temperature.date, value: temperature.value + \" °C\" };\n              })}\n              picture=\"assets/sensors/teplomer.png\"\n            ></SensorCard>\n            <SensorCard\n              key=\"pressure\"\n              pathName=\"pressure\"\n              sensor={pressure}\n              name=\"Tlak vzduchu\"\n              text={pressure !== null ? pressure.value + \" hPa\" : \"Senzor nie je dostupný\"}\n              gardenName={props.gardenName}\n              history={pressureHistory.map((pressure) => {\n                return { date: pressure.date, value: pressure.value + \" hPa\" };\n              })}\n              picture=\"assets/sensors/pressure.png\"\n            ></SensorCard>\n            <SensorCard\n              key=\"humidity\"\n              pathName=\"humidity\"\n              sensor={humidity}\n              name=\"Vlhkosť vzduchu\"\n              text={humidity !== null ? humidity.value + \" %\" : \"Senzor nie je dostupný\"}\n              gardenName={props.gardenName}\n              history={humidityHistory.map((humidity) => {\n                return { date: humidity.date, value: humidity.value + \" %\" };\n              })}\n              picture=\"assets/sensors/humidity.png\"\n            ></SensorCard>\n            <SensorCard\n              key=\"soil\"\n              pathName=\"soil\"\n              sensor={soil}\n              name=\"Vlhkosť pôdy\"\n              text={soil !== null ? soil.value + \" %\" : \"Senzor nie je dostupný\"}\n              gardenName={props.gardenName}\n              history={soilHistory.map((soil) => {\n                return { date: soil.date, value: soil.value + \" %\" };\n              })}\n              picture=\"assets/sensors/soil.png\"\n            ></SensorCard>\n            {rain != null ? (\n              <SensorCard\n                key=\"rain\"\n                pathName=\"rain\"\n                sensor={rain}\n                name=\"Zrážky\"\n                gardenName={props.gardenName}\n                history={rainHistory.map((rain) => {\n                  return {\n                    date: rain.date,\n                    value: rain.raining ? \"Prší\" : \"Neprší\",\n                  };\n                })}\n                text={rain.raining ? \"Prší\" : \"V tomto okamžiku neprší\"}\n                picture={\n                  rain.raining\n                    ? \"assets/sensors/rain.jpg\"\n                    : \"assets/sensors/sun.jpg\"\n                }\n              ></SensorCard>\n            ) : null}\n          </CardDeck>\n    </div>\n  );\n}\n\nexport default SensorsGarden;\n"]},"metadata":{},"sourceType":"module"}