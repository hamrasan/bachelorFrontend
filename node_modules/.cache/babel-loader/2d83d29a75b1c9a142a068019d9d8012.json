{"ast":null,"code":"var _jsxFileName = \"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/TheGarden.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport PlantCard from \"../components/PlantCard\";\nimport SearchForm from \"../components/SearchForm\";\nimport DropdownFilter from \"../components/DropDownFilter\";\nimport { CardDeck, Container, Button, Nav, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MyVerticallyCenteredModal from \"../components/MyVerticallyCenteredModal\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TheGarden() {\n  _s();\n\n  const axios = require(\"axios\");\n\n  const [categories, setCategories] = useState([]);\n  const [plants, setPlants] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState([]);\n  const [subcategoryFilter, setSubcategoryFilter] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [gardens, setGardens] = useState([]);\n  const [actualGardenName, setActualGardenName] = useState(\"\");\n  const [actualGardenSlug, setActualGardenSlug] = useState(\"\");\n  const [error, setError] = useState(false);\n  const handleError = useErrorHandler();\n\n  const fetchPlants = (id, name, slug) => {\n    setActualGardenName(name);\n    setActualGardenSlug(slug);\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/plants/garden/\" + id,\n      withCredentials: true\n    }).then(res => {\n      if (res.status == 200) {\n        setPlants(res.data);\n      } else throw Error(res.status);\n    }).catch(error => {\n      handleError(error);\n      console.error(error);\n    });\n  };\n\n  const fetchGardens = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/garden/all\"\n    }).then(res => {\n      if (res.status == 200) {\n        setGardens(res.data);\n        console.log(res.data);\n\n        if (res.data.length > 0) {\n          setActualGardenName(res.data[0].name);\n          setActualGardenSlug(res.data[0].slug);\n          fetchPlants(res.data[0].id, res.data[0].name, res.data[0].slug);\n        }\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n      handleError(error);\n    });\n  };\n\n  const createGarden = (name, location) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/garden/\",\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        name: name,\n        location: location\n      }\n    }).then(res => {\n      if (res.status == 200) {\n        fetchGardens();\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n      handleError(error);\n    });\n  };\n\n  const handleFilter = id => {\n    console.log(id);\n    let newArray = [];\n\n    if (!categoryFilter.includes(id)) {\n      newArray = [...categoryFilter, id];\n    } else {\n      newArray = categoryFilter.filter(oldId => id !== oldId);\n    }\n\n    setCategoryFilter(newArray);\n    console.log(newArray);\n  };\n\n  const handleSubmit = (name, location) => {\n    createGarden(name, location);\n    setModalShow(false);\n  };\n\n  const fetchCategories = () => {\n    axios.get(process.env.REACT_APP_API_URL + \"/categories\").then(res => {\n      console.log(res.data);\n      setCategories(res.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchCategories();\n    fetchGardens();\n  }, [error]); // const mappedPlants = plants.map((plant) => {\n  //   return (\n  //     <Link to={\"/garden/detail/\" + plant.id}>\n  //       <PlantCard key={plant.id} plant={plant} />\n  //     </Link>\n  //   );\n  // });\n\n  return /*#__PURE__*/_jsxDEV(ErrorComponent, {\n    onReset: () => setError(true),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"pt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          className: \"mb-3\",\n          onClick: () => setModalShow(true),\n          children: \"Prida\\u0165 z\\xE1hradu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n          show: modalShow,\n          onHide: () => setModalShow(false),\n          title: \"Pridať záhradu\",\n          bodyTitle: \"Zadaj názov\",\n          bodyText: \"addGarden\",\n          bodySubTitle: \"Zadaj lokalitu\",\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [gardens.length > 1 ? /*#__PURE__*/_jsxDEV(Nav, {\n          variant: \"tabs\",\n          defaultActiveKey: gardens[0].id,\n          className: \"mb-3\",\n          children: gardens.map(garden => /*#__PURE__*/_jsxDEV(Nav.Item, {\n            onClick: () => fetchPlants(garden.id, garden.name, garden.slug),\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              eventKey: garden.id,\n              children: garden.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this) : null, gardens.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"d-flex flex-column justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(SearchForm, {\n              onChange: setSearchString,\n              value: searchString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(DropdownFilter, {\n              categories: categories,\n              categoryFilter: categoryFilter,\n              handleFilter: handleFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"d-flex flex-row-reverse\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/garden/new/\" + actualGardenSlug,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                children: \" Pridaj nov\\xFA rastlinu \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 18\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(CardDeck, {\n          children: plants.filter(plant => categoryFilter.length > 0 ? categoryFilter.includes(plant.subcategoryDto.category.id) : plant).filter(plant => searchString.length >= 3 ? plant.name.toLowerCase().includes(searchString.toLowerCase()) : plant).map(plant => /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/garden/detail/\" + plant.id,\n            children: /*#__PURE__*/_jsxDEV(PlantCard, {\n              plant: plant\n            }, plant.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, plant.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TheGarden, \"P6ipA8h3+Heo0RLesAEl0/QmrRU=\", false, function () {\n  return [useErrorHandler];\n});\n\n_c = TheGarden;\nexport default TheGarden;\n\nvar _c;\n\n$RefreshReg$(_c, \"TheGarden\");","map":{"version":3,"sources":["/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/TheGarden.js"],"names":["useState","useEffect","PlantCard","SearchForm","DropdownFilter","CardDeck","Container","Button","Nav","Row","Col","Link","MyVerticallyCenteredModal","ErrorComponent","useErrorHandler","TheGarden","axios","require","categories","setCategories","plants","setPlants","categoryFilter","setCategoryFilter","subcategoryFilter","setSubcategoryFilter","searchString","setSearchString","modalShow","setModalShow","gardens","setGardens","actualGardenName","setActualGardenName","actualGardenSlug","setActualGardenSlug","error","setError","handleError","fetchPlants","id","name","slug","method","url","process","env","REACT_APP_API_URL","withCredentials","then","res","status","data","Error","catch","console","fetchGardens","log","length","createGarden","location","headers","handleFilter","newArray","includes","filter","oldId","handleSubmit","fetchCategories","get","map","garden","plant","subcategoryDto","category","toLowerCase"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PlantCard from \"../components/PlantCard\";\nimport SearchForm from \"../components/SearchForm\";\nimport DropdownFilter from \"../components/DropDownFilter\";\n\nimport { CardDeck, Container, Button, Nav, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MyVerticallyCenteredModal from \"../components/MyVerticallyCenteredModal\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\n\nfunction TheGarden() {\n  const axios = require(\"axios\");\n\n  const [categories, setCategories] = useState([]);\n  const [plants, setPlants] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState([]);\n  const [subcategoryFilter, setSubcategoryFilter] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [gardens, setGardens] = useState([]);\n  const [actualGardenName, setActualGardenName] = useState(\"\");\n  const [actualGardenSlug, setActualGardenSlug] = useState(\"\");\n  const [error, setError] = useState(false);\n  const handleError = useErrorHandler();\n\n\n  const fetchPlants = (id, name, slug) => {\n    setActualGardenName(name);\n    setActualGardenSlug(slug);\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/plants/garden/\" +id,\n      withCredentials: true,\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          setPlants(res.data);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        handleError(error);\n        console.error(error);\n      });\n  };\n\n  const fetchGardens = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/garden/all\",\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setGardens(res.data);\n          console.log(res.data);\n          if(res.data.length>0){\n            setActualGardenName(res.data[0].name);\n            setActualGardenSlug(res.data[0].slug);\n            fetchPlants(res.data[0].id, res.data[0].name, res.data[0].slug);\n          }\n        }else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const createGarden = (name, location) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/garden/\",\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      data: {\n        name: name,\n        location: location,\n      },\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          fetchGardens();\n        }else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const handleFilter = (id) => {\n    console.log(id);\n    let newArray = [];\n    if (!categoryFilter.includes(id)) {\n      newArray = [...categoryFilter, id];\n    } else {\n      newArray = categoryFilter.filter((oldId) => id !== oldId);\n    }\n    setCategoryFilter(newArray);\n    console.log(newArray);\n  };\n\n  const handleSubmit = (name, location) => {\n    createGarden(name, location);\n    setModalShow(false);\n  };\n\n  const fetchCategories = () => {\n    axios.get(process.env.REACT_APP_API_URL + \"/categories\").then((res) => {\n      console.log(res.data);\n      setCategories(res.data);\n    });\n  };\n\n\n  useEffect(() => {\n    fetchCategories();\n    fetchGardens();\n  }, [error]);\n\n  // const mappedPlants = plants.map((plant) => {\n  //   return (\n  //     <Link to={\"/garden/detail/\" + plant.id}>\n  //       <PlantCard key={plant.id} plant={plant} />\n  //     </Link>\n  //   );\n  // });\n\n  return (\n    <ErrorComponent onReset={() => setError(true)}>\n    <div>\n      <Container className=\"pt-3\">\n        <Button\n          variant=\"info\"\n          className=\"mb-3\"\n          onClick={() => setModalShow(true)}\n        >\n          Pridať záhradu\n        </Button>\n        <MyVerticallyCenteredModal\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n          title={\"Pridať záhradu\"}\n          bodyTitle={\"Zadaj názov\"}\n          bodyText={\"addGarden\"}\n          bodySubTitle={\"Zadaj lokalitu\"}\n          onSubmit={handleSubmit}\n        />\n      </Container>\n\n      <Container>\n        {gardens.length > 1 ? (\n          <Nav variant=\"tabs\" defaultActiveKey={gardens[0].id} className=\"mb-3\">\n            {gardens.map((garden) => (\n              <Nav.Item onClick={() => fetchPlants(garden.id, garden.name, garden.slug)}>\n                <Nav.Link eventKey={garden.id}>{garden.name}</Nav.Link>\n              </Nav.Item>\n            ))}\n          </Nav>\n        ) : null}\n\n        {gardens.length>0 ? \n             (<Row>\n             <Col className=\"d-flex flex-column justify-content-center\">\n               <SearchForm onChange={setSearchString} value={searchString} />\n             </Col>\n             <Col>\n               <DropdownFilter\n                 categories={categories}\n                 categoryFilter={categoryFilter}\n                 handleFilter={handleFilter}\n               />\n             </Col>\n             <Col className=\"d-flex flex-row-reverse\">\n               <Link to={\"/garden/new/\" + actualGardenSlug}>\n                 <Button variant=\"info\"> Pridaj novú rastlinu </Button>{\" \"}\n               </Link>\n             </Col>\n           </Row>)\n        :null}\n\n        <CardDeck>\n          {plants\n            .filter((plant) =>\n              categoryFilter.length > 0\n                ? categoryFilter.includes(plant.subcategoryDto.category.id)\n                : plant\n            )\n            .filter((plant) =>\n              searchString.length >= 3\n                ? plant.name.toLowerCase().includes(searchString.toLowerCase())\n                : plant\n            )\n            .map((plant) => (\n              <Link key={plant.id} to={\"/garden/detail/\" + plant.id}>\n                <PlantCard key={plant.id} plant={plant} />\n              </Link>\n            ))}\n        </CardDeck>\n      </Container>\n    </div>\n    </ErrorComponent>\n  );\n}\n\nexport default TheGarden;\n"]},"metadata":{},"sourceType":"module"}