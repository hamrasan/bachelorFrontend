{"ast":null,"code":"var _jsxFileName = \"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/MyValving.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, CardDeck, Button } from \"react-bootstrap\";\nimport ValveCard from \"../components/ValveCard\";\nimport MyVerticallyCenteredModal from \"../components/MyVerticallyCenteredModal\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyValving() {\n  _s();\n\n  const [valves, setValves] = useState([]);\n  const [gardens, setGardens] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [error, setError] = useState(false);\n\n  const axios = require(\"axios\");\n\n  const handleError = useErrorHandler();\n  let i = 1;\n\n  const updateGardens = (id, gardens) => {\n    valves.filter(valve => valve.id === id ? postAddGardens(id, gardens) : null);\n  };\n\n  const valvingImmediately = (valveName, length) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/valve/immediately/\" + valveName,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        length: length\n      }\n    }).then(res => {\n      if (res.status == 200) {\n        console.log(res);\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n      handleError(error);\n    });\n  };\n\n  const postAddGardens = (id, valveGardens) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/valve/add_gardens/\" + id,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        gardens: valveGardens\n      }\n    }).then(res => {\n      fetchValves();\n    }).catch(error => {\n      console.error(error);\n      handleError(error);\n    });\n  };\n\n  const fetchValves = () => {\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/valve/all\",\n      withCredentials: true\n    }).then(res => {\n      if (res.status == 200) {\n        console.log(res);\n        setValves(res.data);\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n      handleError(error);\n    });\n  };\n\n  const fetchGardens = () => {\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/garden/all\",\n      withCredentials: true\n    }).then(res => {\n      if (res.status == 200) {\n        console.log(res);\n        setGardens(res.data);\n      } else throw Error(res.status);\n    }).catch(error => {\n      console.error(error);\n      handleError(error);\n    });\n  }; // 636422248cce4eeea646\n\n\n  const createValve = id => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/valve/create/\" + id,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {}\n    }).then(res => {\n      if (res.status == 200) {\n        fetchValves();\n      } else throw Error(res.status);\n    }).catch(error => {\n      if (error.response.status == 403) {\n        error.message = \"Pridanie zariadenia s týmto identifikačným číslom nie je možné. Skontrolujte identifikačné číslo a skúste to znova.\";\n        handleError(error);\n      } else {\n        handleError(error);\n      }\n    });\n  };\n\n  const handleSubmit = id => {\n    console.log(id);\n    createValve(id);\n    setModalShow(false);\n  };\n\n  useEffect(() => {\n    fetchGardens();\n    fetchValves();\n  }, [modalShow, error]);\n  return /*#__PURE__*/_jsxDEV(ErrorComponent, {\n    onReset: () => setError(true),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"pt-2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          className: \"mt-2 mr-2\",\n          onClick: () => setModalShow(true),\n          children: \"Pridaj polieva\\u010D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n          show: modalShow,\n          onHide: () => setModalShow(false),\n          title: \"Pridať polievač\",\n          bodyTitle: \"Zadaj identifikačné číslo polievača:\",\n          bodyText: \"addValve\",\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"pt-3\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(CardDeck, {\n            children: valves.map(valve => /*#__PURE__*/_jsxDEV(ValveCard, {\n              valve: valve,\n              number: i++,\n              gardens: gardens,\n              updateGardens: updateGardens,\n              valvingImmediately: valvingImmediately\n            }, valve.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyValving, \"xkyis7Crn2PuJg8WLKoH6+bZit8=\", false, function () {\n  return [useErrorHandler];\n});\n\n_c = MyValving;\nexport default MyValving;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyValving\");","map":{"version":3,"sources":["/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/MyValving.js"],"names":["useState","useEffect","Container","Row","CardDeck","Button","ValveCard","MyVerticallyCenteredModal","ErrorComponent","useErrorHandler","MyValving","valves","setValves","gardens","setGardens","modalShow","setModalShow","error","setError","axios","require","handleError","i","updateGardens","id","filter","valve","postAddGardens","valvingImmediately","valveName","length","method","url","process","env","REACT_APP_API_URL","withCredentials","headers","data","then","res","status","console","log","Error","catch","valveGardens","fetchValves","fetchGardens","createValve","response","message","handleSubmit","map"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Container, Row, CardDeck, Button } from \"react-bootstrap\";\nimport ValveCard from \"../components/ValveCard\";\nimport MyVerticallyCenteredModal from \"../components/MyVerticallyCenteredModal\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\n\nfunction MyValving() {\n  const [valves, setValves] = useState([]);\n  const [gardens, setGardens] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [error, setError] = useState(false);\n  const axios = require(\"axios\");\n  const handleError = useErrorHandler();\n  let i = 1;\n\n  const updateGardens = (id, gardens) => {\n    valves.filter((valve) =>\n      valve.id === id ? postAddGardens(id, gardens) : null\n    );\n  };\n\n  const valvingImmediately = (valveName, length) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/valve/immediately/\" + valveName,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      data: {\n        length: length,\n      },\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const postAddGardens = (id, valveGardens) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/valve/add_gardens/\" + id,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      data: {\n        gardens: valveGardens,\n      },\n    })\n      .then((res) => {\n        fetchValves();\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const fetchValves = () => {\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/valve/all\",\n      withCredentials: true,\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(res);\n          setValves(res.data);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const fetchGardens = () => {\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/garden/all\",\n      withCredentials: true,\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(res);\n          setGardens(res.data);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n  // 636422248cce4eeea646\n  const createValve = (id) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/valve/create/\" + id,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      data: {},\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          fetchValves();\n        } \n        else throw Error(res.status);\n      })\n      .catch((error) => {\n        if (error.response.status == 403) {\n          error.message= \"Pridanie zariadenia s týmto identifikačným číslom nie je možné. Skontrolujte identifikačné číslo a skúste to znova.\";\n          handleError(error);\n        }\n        else{\n          handleError(error);\n        }\n      });\n  };\n\n  const handleSubmit = (id) => {\n    console.log(id);\n    createValve(id);\n    setModalShow(false);\n  };\n\n  useEffect(() => {\n    fetchGardens();\n    fetchValves();\n  }, [modalShow, error]);\n\n  return (\n    <ErrorComponent onReset={() => setError(true)}>\n      <div>\n        <Container className=\"pt-2\">\n          <Button\n            variant=\"info\"\n            className=\"mt-2 mr-2\"\n            onClick={() => setModalShow(true)}\n          >\n            Pridaj polievač\n          </Button>\n          <MyVerticallyCenteredModal\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n            title={\"Pridať polievač\"}\n            bodyTitle={\"Zadaj identifikačné číslo polievača:\"}\n            bodyText={\"addValve\"}\n            onSubmit={handleSubmit}\n          />\n        </Container>\n        <Container className=\"pt-3\">\n          <Row>\n            <CardDeck>\n              {valves.map((valve) => (\n                <ValveCard\n                  key={valve.id}\n                  valve={valve}\n                  number={i++}\n                  gardens={gardens}\n                  updateGardens={updateGardens}\n                  valvingImmediately={valvingImmediately}\n                />\n              ))}\n            </CardDeck>\n          </Row>\n        </Container>\n      </div>\n    </ErrorComponent>\n  );\n}\n\nexport default MyValving;\n"]},"metadata":{},"sourceType":"module"}