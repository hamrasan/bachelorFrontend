[{"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/index.js":"1","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/App.js":"2","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/reportWebVitals.js":"3","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/AuthRoute.js":"4","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/appContext.js":"5","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/LoginForm.js":"6","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ErrorComponent.js":"7","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/TheNavigation.js":"8","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/PlantNewForm.js":"9","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/RegisterForm.js":"10","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ValvingSchedule.js":"11","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/MyValving.js":"12","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/TheNotification.js":"13","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/TheGarden.js":"14","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/MyHistory.js":"15","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/PlantDetail.js":"16","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/TheHome.js":"17","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/MyProfile.js":"18","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/SelectPlants.js":"19","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/TheSpinner.js":"20","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ModalAddValving.js":"21","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ModalConfirm.js":"22","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ValveCard.js":"23","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/MyVerticallyCenteredModal.js":"24","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/PlantCard.js":"25","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/SearchForm.js":"26","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ProfileStyle.js":"27","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/DropDownFilter.js":"28","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ModalSetSensorsTime.js":"29","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/PlantForm.js":"30","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/SensorsGarden.js":"31","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/GardenFilterCheckbox.js":"32","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/SensorCard.js":"33"},{"size":652,"mtime":1621371935737,"results":"34","hashOfConfig":"35"},{"size":4448,"mtime":1621435620573,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1621371935738,"results":"37","hashOfConfig":"35"},{"size":666,"mtime":1621371935728,"results":"38","hashOfConfig":"35"},{"size":102,"mtime":1621371935729,"results":"39","hashOfConfig":"35"},{"size":3519,"mtime":1621431402288,"results":"40","hashOfConfig":"35"},{"size":728,"mtime":1621371935729,"results":"41","hashOfConfig":"35"},{"size":1517,"mtime":1621371935736,"results":"42","hashOfConfig":"35"},{"size":8795,"mtime":1621437571718,"results":"43","hashOfConfig":"35"},{"size":4442,"mtime":1621377496978,"results":"44","hashOfConfig":"35"},{"size":5987,"mtime":1621377496977,"results":"45","hashOfConfig":"35"},{"size":4917,"mtime":1621377496977,"results":"46","hashOfConfig":"35"},{"size":6242,"mtime":1621377496977,"results":"47","hashOfConfig":"35"},{"size":6213,"mtime":1621435834545,"results":"48","hashOfConfig":"35"},{"size":2243,"mtime":1621377496975,"results":"49","hashOfConfig":"35"},{"size":3060,"mtime":1621377496975,"results":"50","hashOfConfig":"35"},{"size":3004,"mtime":1621377496977,"results":"51","hashOfConfig":"35"},{"size":525,"mtime":1621371935739,"results":"52","hashOfConfig":"35"},{"size":2784,"mtime":1621377496978,"results":"53","hashOfConfig":"35"},{"size":364,"mtime":1621371935736,"results":"54","hashOfConfig":"35"},{"size":2820,"mtime":1621371935731,"results":"55","hashOfConfig":"35"},{"size":706,"mtime":1621371935731,"results":"56","hashOfConfig":"35"},{"size":2763,"mtime":1621371935736,"results":"57","hashOfConfig":"35"},{"size":3132,"mtime":1621371935732,"results":"58","hashOfConfig":"35"},{"size":635,"mtime":1621377496977,"results":"59","hashOfConfig":"35"},{"size":690,"mtime":1621371935735,"results":"60","hashOfConfig":"35"},{"size":901,"mtime":1621371935734,"results":"61","hashOfConfig":"35"},{"size":663,"mtime":1621371935729,"results":"62","hashOfConfig":"35"},{"size":2004,"mtime":1621371935731,"results":"63","hashOfConfig":"35"},{"size":3922,"mtime":1621377496977,"results":"64","hashOfConfig":"35"},{"size":8597,"mtime":1621377496976,"results":"65","hashOfConfig":"35"},{"size":356,"mtime":1621371935730,"results":"66","hashOfConfig":"35"},{"size":2201,"mtime":1621371935736,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1p55flb",{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"70"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"70"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/index.js",[],["154","155"],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/App.js",["156","157","158","159"],"// import \"./App.css\";\nimport TheNavigation from \"./components/TheNavigation\";\nimport TheNotification from \"./views/TheNotification\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport TheGarden from \"./views/TheGarden\";\nimport MyValving from \"./views/MyValving\";\nimport PlantNewForm from \"./components/PlantNewForm\";\nimport ValvingSchedule from \"./components/ValvingSchedule\";\nimport TheHome from \"./views/TheHome\";\nimport MyHistory from \"./views/MyHistory\";\nimport PlantDetail from \"./views/PlantDetail\";\nimport MyProfile from \"./views/MyProfile\";\nimport Context from \"./appContext\";\nimport AuthRoute from \"./AuthRoute\";\nimport { useState, useLayoutEffect } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { Redirect, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ErrorComponent from \"./components/ErrorComponent\";\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false);\n  const [oldUrl, setOldUrl] = useState(null);\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(false);\n\n  const login = () => {\n    console.log(\"login name\");\n    console.log(user);\n    console.log(process.env.REACT_APP_API_URL);\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/user\",\n      withCredentials: true,\n      // headers: {\n      //   \"Content-Type\": \"application/json\",\n      //   \"Access-Control-Allow-Origin\": \"*\",\n      // },\n    })\n      .then((res) => {\n        console.log(\"res.data\");\n        console.log(res);\n        setUser(res.data);\n        setIsAuth(true);\n      })\n      .catch((error) => {\n        logoutFrontEnd();\n        console.log(\"after logout\");\n        console.error(error);\n      });\n    // setName(user.firstName);\n  };\n\n  useLayoutEffect(() => {\n    if (Cookies.get(\"JSESSIONID\") && isAuth == false) {\n      login();\n    }\n  }, isAuth);\n\n  const logout = () => {\n    axios({\n      method: \"post\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/logout\",\n      data: {},\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        logoutFrontEnd();\n      })\n      .catch((error) => {\n        console.log(\"after logout\");\n        console.error(error);\n      });\n  };\n\n  const logoutFrontEnd = () => {\n    Cookies.remove(\"JSESSIONID\");\n    setIsAuth(false);\n    setUser(null);\n  };\n\n  const contextValue = {\n    isAuth: isAuth,\n    login: login,\n    logout: logout,\n    oldUrl: oldUrl,\n    setOldUrl: setOldUrl,\n    user: user,\n  };\n\n  return (\n    <Context.Provider value={contextValue}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <TheNavigation user={user} />\n        </header>\n\n        <ErrorComponent onReset={() => setError(true)}>\n          <div>\n            <Switch>\n              <AuthRoute path=\"/login\" guest={true}>\n                <LoginForm />\n              </AuthRoute>\n              <AuthRoute path=\"/register\" guest={true}>\n                <RegisterForm />\n              </AuthRoute>\n              <AuthRoute path=\"/logout\">\n                {() => {\n                  logout();\n                  return <Redirect to=\"/login\" />;\n                }}\n              </AuthRoute>\n              <AuthRoute path=\"/valving\" exact>\n                <MyValving />\n              </AuthRoute>\n              <AuthRoute path=\"/valving/schedule/:id\">\n                <ValvingSchedule />\n              </AuthRoute>\n              <AuthRoute path=\"/history/:sensor/:name\">\n                <MyHistory />\n              </AuthRoute>\n              <AuthRoute path=\"/garden/detail/:id\">\n                <PlantDetail />\n              </AuthRoute>\n              <AuthRoute path=\"/garden\" exact>\n                <TheGarden />\n              </AuthRoute>\n              <AuthRoute path=\"/garden/new/:slug\">\n                <PlantNewForm user={user} />\n              </AuthRoute>\n              <AuthRoute path=\"/profile\">\n                <MyProfile />\n              </AuthRoute>\n              <AuthRoute path=\"/notifications\" exact>\n                <TheNotification />\n              </AuthRoute>\n              <AuthRoute path=\"/\" exact>\n                <TheHome />\n              </AuthRoute>\n            </Switch>\n          </div>\n        </ErrorComponent>\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/reportWebVitals.js",[],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/AuthRoute.js",[],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/appContext.js",[],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/LoginForm.js",["160","161","162"],"import { Form, Col, Button, Row, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect, useContext } from \"react\";\nimport appContext from \"../appContext\";\nimport { useErrorHandler } from \"react-error-boundary\";\n\nfunction LoginForm() {\n  const axios = require(\"axios\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let context = useContext(appContext);\n  const handleError = useErrorHandler();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(process.env.REACT_APP_API_URL);\n\n    const requestOptions = {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email: email, password: password }),\n    };\n    \n    fetch(process.env.REACT_APP_API_URL + \"/login\", requestOptions).then((res) => {\n      if (res.status == 200) {\n        console.log(res);\n        console.log(\"PRIHLASUJEM\");\n        context.login();\n      }\n      else throw Error(res.status);\n    }\n    ).catch((error) => {\n      handleError(error);\n      context.logout();\n      console.log(\"after logout\");\n      console.error(error);\n    });\n\n\n    // axios({\n    //   method: \"post\",\n    //   url: process.env.REACT_APP_API_URL + \"/login\",\n    //   withCredentials: true,\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   data: {\n    //     email: email,\n    //     password: password,\n    //   },\n    // })\n    //   .then((res) => {\n    //     if (res.status == 200) {\n    //       console.log(res);\n    //       console.log(\"PRIHLASUJEM\");\n    //       context.login();\n    //     } else throw Error(res.status);\n    //   })\n    //   .catch((error) => {\n    //     handleError(error);\n    //     context.logout();\n    //     console.log(\"after logout\");\n    //     console.error(error);\n    //   });\n  };\n\n  return (\n    <div className=\"loginForm\">\n      <Container className=\"pt-5\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n            <Form.Label column sm={2}>\n              Email\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email\"\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n            <Form.Label column sm={2}>\n              Heslo\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Heslo\"\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Col className=\"d-flex justify-content-center\">\n              <span className=\"mr-1\">Ešte nemáš účet?</span>\n\n              <Link to=\"/register\" className=\"ml-1\">\n                {\" \"}\n                Registruj sa tu!\n              </Link>\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Col className=\"d-flex justify-content-center\">\n              <Button type=\"submit\">Prihlásiť</Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </Container>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ErrorComponent.js",[],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/TheNavigation.js",[],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/PlantNewForm.js",["163","164","165","166","167","168","169","170"],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/RegisterForm.js",["171"],"import { Form, Col, Button, Row, Container } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction RegisterForm() {\n  const axios = require(\"axios\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [gender, setGender] = useState(1);\n  const [passwordAgain, setPasswordAgain] = useState(\"\");\n  let history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios({\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/user\",\n      data: {\n        user: {\n          firstName: firstName,\n          lastName: lastName,\n          password: password,\n          email: email,\n        },\n        password_control: passwordAgain,\n        gender: gender,\n      },\n    })\n      .then((res) => {\n        console.log(\"daaata\");\n        console.log(res);\n        if (res.status == 200) {\n          history.push(\"/\");\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.log(\"after register\");\n        console.error(error);\n      });\n  };\n\n  return (\n    <div className=\"registerForm\">\n      <Container className=\"pt-5\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Group as={Row} controlId=\"formHorizontalName\">\n            <Form.Label column sm={2}>\n              Meno\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Meno\"\n                onChange={(e) => {\n                  setFirstName(e.target.value);\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"formHorizontalLastName\">\n            <Form.Label column sm={2}>\n              Priezvisko\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Priezvisko\"\n                onChange={(e) => {\n                  setLastName(e.target.value);\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"formHorizontalLastName\">\n            <Form.Label column sm={2}>\n              Pohlavie\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                as=\"select\"\n                onChange={(e) => {\n                  setGender(e.target.value);\n                }}\n              >\n                <option value=\"1\">muž</option>\n                <option value=\"2\">žena</option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n            <Form.Label column sm={2}>\n              Email\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email\"\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n            <Form.Label column sm={2}>\n              Heslo\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Heslo\"\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n            <Form.Label column sm={2}>\n              Heslo znova\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Heslo\"\n                onChange={(e) => {\n                  setPasswordAgain(e.target.value);\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Registrovať</Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </Container>\n    </div>\n  );\n}\n\nexport default RegisterForm;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ValvingSchedule.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"import {\n  CardDeck,\n  Container,\n  Button,\n  Form,\n  ListGroup,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ModalAddValving from \"./ModalAddValving\";\nimport ModalConfirm from \"./ModalConfirm\";\nimport ErrorComponent from \"../components/ErrorComponent\";\n\nfunction ValvingSchedule() {\n  const axios = require(\"axios\");\n  const [days, setDays] = useState([]);\n  const [time, setTime] = useState(\"10:00\");\n  const [valvingLength, setValvingLength] = useState(0);\n  const [schedules, setSchedules] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [modalShowConfirm, setModalShowConfirm] = useState(false);\n  const [scheduleIdRemove, setScheduleIdRemove] = useState(null);\n  const [error, setError] = useState(false);\n  let history = useHistory();\n  const params = useParams();\n\n  const handleCheckbox = (id) => {\n    let newArray = [];\n    if (!days.includes(id)) {\n      newArray = [...days, id];\n    } else {\n      newArray = days.filter((oldId) => id !== oldId);\n    }\n    setDays(newArray);\n  };\n\n  const fetchSchedules = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/schedule/all/\" + params.id,\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          setSchedules(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleSubmit = () => {\n    setModalShow(false);\n\n    axios({\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/schedule/\" + params.id,\n      data: {\n        days: days,\n        time: time,\n        valvingLength: valvingLength,\n      },\n    })\n      .then((res) => {\n        console.log(\"daaata\");\n        console.log(res);\n        if (res.status == 200) {\n          fetchSchedules();\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.log(\"after register\");\n        console.error(error);\n      });\n  };\n\n  const deleteSchedule = (id) => {\n    console.log(id);\n    axios({\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      withCredentials: true,\n      data: {},\n      url: process.env.REACT_APP_API_URL + \"/schedule/\" + id,\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.status == 200) {\n          fetchSchedules();\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleConfirm = (id) => {\n    setModalShowConfirm(false);\n    if (id !== null) {\n      deleteSchedule(id);\n    }\n  };\n\n  useEffect(() => {\n    fetchSchedules();\n  }, [error]);\n\n  return (\n    <ErrorComponent onReset={() => setError(true)}>\n      <div>\n        <Container className=\"pt-2\">\n          <Row>\n            <Col>\n              <h3 className=\"text-center\">Pravidelné polievania</h3>\n              <Button\n                variant=\"info\"\n                className=\"mt-2 mr-2\"\n                onClick={() => setModalShow(true)}\n              >\n                Pridaj polievanie\n              </Button>\n              <ModalAddValving\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                title={\"Pridaj pravidelné polievanie\"}\n                onSubmit={handleSubmit}\n                setTime={setTime}\n                setValvingLength={setValvingLength}\n                time={time}\n                handleCheckbox={handleCheckbox}\n              />\n            </Col>\n          </Row>\n\n          <Row className=\"pt-3\">\n            <Col>\n              <ListGroup>\n                {schedules.map((schedule) => (\n                  <ListGroup.Item className=\"d-flex\">\n                    <Col>\n                      {schedule.days.map((day) =>\n                        day == 1\n                          ? \"Pondelok, \"\n                          : day == 2\n                          ? \"Utorok, \"\n                          : day == 3\n                          ? \"Streda, \"\n                          : day == 4\n                          ? \"Štvrtok, \"\n                          : day == 5\n                          ? \"Piatok, \"\n                          : day == 6\n                          ? \"Sobota, \"\n                          : day == 7\n                          ? \"Nedeľa, \"\n                          : null\n                      )}\n                      {schedule.hour}:\n                      {schedule.minutes < 10\n                        ? \"0\" + schedule.minutes\n                        : schedule.minutes}\n                      , {schedule.length} min\n                    </Col>\n                    <Col>\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        onClick={() => {\n                          setScheduleIdRemove(schedule.id);\n                          setModalShowConfirm(true);\n                        }}\n                      >\n                        <span aria-hidden=\"true\">x</span>\n                      </button>\n                      <ModalConfirm\n                        show={modalShowConfirm}\n                        title={\"Vymazať rozvrh\"}\n                        body={\"Naozaj chceš vymazať tento rozvrh?\"}\n                        onSubmit={() => handleConfirm(scheduleIdRemove)}\n                        onHide={() => setModalShowConfirm(false)}\n                      />\n                    </Col>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </ErrorComponent>\n  );\n}\n\nexport default ValvingSchedule;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/MyValving.js",["186","187","188","189","190","191"],"import { useState, useEffect } from \"react\";\nimport { Container, Row, CardDeck, Button } from \"react-bootstrap\";\nimport ValveCard from \"../components/ValveCard\";\nimport MyVerticallyCenteredModal from \"../components/MyVerticallyCenteredModal\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\n\nfunction MyValving() {\n  const [valves, setValves] = useState([]);\n  const [gardens, setGardens] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [error, setError] = useState(false);\n  const axios = require(\"axios\");\n  const handleError = useErrorHandler();\n  let i = 1;\n\n  const updateGardens = (id, gardens) => {\n    valves.filter((valve) =>\n      valve.id === id ? postAddGardens(id, gardens) : null\n    );\n  };\n\n  const valvingImmediately = (valveName, length) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/valve/immediately/\" + valveName,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      data: {\n        length: length,\n      },\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const postAddGardens = (id, valveGardens) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/valve/add_gardens/\" + id,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      data: {\n        gardens: valveGardens,\n      },\n    })\n      .then((res) => {\n        fetchValves();\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const fetchValves = () => {\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/valve/all\",\n      withCredentials: true,\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(res);\n          setValves(res.data);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const fetchGardens = () => {\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/garden/all\",\n      withCredentials: true,\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(res);\n          setGardens(res.data);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n  // 636422248cce4eeea646\n  const createValve = (id) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/valve/create/\" + id,\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      data: {},\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          fetchValves();\n        } \n        else throw Error(res.status);\n      })\n      .catch((error) => {\n        if (error.response.status == 403) {\n          error.message= \"Pridanie zariadenia s týmto identifikačným číslom nie je možné. Skontrolujte identifikačné číslo a skúste to znova.\";\n          handleError(error);\n        }\n        else{\n          handleError(error);\n        }\n      });\n  };\n\n  const handleSubmit = (id) => {\n    console.log(id);\n    createValve(id);\n    setModalShow(false);\n  };\n\n  useEffect(() => {\n    fetchGardens();\n    fetchValves();\n  }, [modalShow, error]);\n\n  return (\n    <ErrorComponent onReset={() => setError(true)}>\n      <div>\n        <Container className=\"pt-2\">\n          <Button\n            variant=\"info\"\n            className=\"mt-2 mr-2\"\n            onClick={() => setModalShow(true)}\n          >\n            Pridaj polievač\n          </Button>\n          <MyVerticallyCenteredModal\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n            title={\"Pridať polievač\"}\n            bodyTitle={\"Zadaj identifikačné číslo polievača:\"}\n            bodyText={\"addValve\"}\n            onSubmit={handleSubmit}\n          />\n        </Container>\n        <Container className=\"pt-3\">\n          <Row>\n            <CardDeck>\n              {valves.map((valve) => (\n                <ValveCard\n                  key={valve.id}\n                  valve={valve}\n                  number={i++}\n                  gardens={gardens}\n                  updateGardens={updateGardens}\n                  valvingImmediately={valvingImmediately}\n                />\n              ))}\n            </CardDeck>\n          </Row>\n        </Container>\n      </div>\n    </ErrorComponent>\n  );\n}\n\nexport default MyValving;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/TheNotification.js",["192","193","194","195","196","197"],"import {\n  Container,\n  Card,\n  Button,\n  Accordion,\n  CardGroup,\n  Form,\n  Row,\n  Col,\n  ListGroup,\n} from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\n\n\nfunction TheNotification() {\n  const axios = require(\"axios\");\n  const [notifications, setNotifications] = useState([]);\n  const [modalShow, setModalShow] = useState(null);\n  const [lowTemp, setLowTemp] = useState(0);\n  const [highTemp, setHighTemp] = useState(15);\n  const [error, setError] = useState(false);\n  const handleError = useErrorHandler();\n\n  const fetchNotifications = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/notifications/all\",\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          setNotifications(res.data);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        handleError(error);\n        console.error(error);\n      });\n  };\n\n  const fetchLowTemp = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/user/lowTemp\",\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(res.data);\n          setLowTemp(res.data);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const fetchHighTemp = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/user/highTemp\",\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(res.data);\n          setHighTemp(res.data);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const setupNotifications = () => {\n    axios({\n      method: \"post\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/user/notifications/\",\n      data: {\n        lowTemp: lowTemp,\n        highTemp: highTemp,\n      },\n    })\n      .then((res) => {\n        if (res.status == 200) {\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const addNotificationSeen = (id) => {\n    axios({\n      method: \"post\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/notifications/seen/\" + id,\n      data: {},\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          fetchNotifications();\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const handleConfirm = () => {\n    setupNotifications();\n    setModalShow(false);\n  };\n\n  useEffect(() => {\n    fetchNotifications();\n    fetchHighTemp();\n    fetchLowTemp();\n  }, [error]);\n\n  return (\n    <ErrorComponent onReset={() => setError(true)}>\n      <div>\n        <Container fluid className=\"pt-3 w-75\">\n          <Accordion defaultActiveKey=\"0\">\n            <Card>\n              <Accordion.Toggle\n                as={Card.Header}\n                eventKey=\"0\"\n                className=\"bg-warning d-flex justify-content-center\"\n              >\n                Notifikácie\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <Row>\n                    <Col>\n                      <ListGroup>\n                        {notifications.map((notification) => (\n                          <ListGroup.Item>\n                            <span>{notification.message}</span>\n                            <button\n                              type=\"button\"\n                              className=\"close\"\n                              onClick={() => {\n                                addNotificationSeen(notification.id);\n                              }}\n                            >\n                              <span aria-hidden=\"true\">✓</span>\n                            </button>\n                          </ListGroup.Item>\n                        ))}\n                      </ListGroup>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n\n          <CardGroup className=\"pt-5\">\n            <Card>\n              <Card.Header>Požadovaná teplota</Card.Header>\n              <Card.Body>\n                <Card.Title>Ak teplota stúpne nad:</Card.Title>\n                <Form.Control\n                  className=\"mb-2 mr-sm-2\"\n                  id=\"inlineFormInputName2\"\n                  value={highTemp}\n                  onChange={(e) => {\n                    setHighTemp(e.target.value);\n                  }}\n                />\n              </Card.Body>\n            </Card>\n            <Card>\n              <Card.Header>Požadovaná teplota</Card.Header>\n              <Card.Body>\n                <Card.Title>Ak teplota klesne pod:</Card.Title>\n                <Form.Control\n                  className=\"mb-2 mr-sm-2\"\n                  id=\"inlineFormInputName2\"\n                  value={lowTemp}\n                  onChange={(e) => {\n                    setLowTemp(e.target.value);\n                  }}\n                />\n              </Card.Body>\n            </Card>\n          </CardGroup>\n\n          <Row className=\"mt-3\">\n            <Col className=\"d-flex justify-content-center\">\n              <Button\n                variant=\"outline-success\"\n                onClick={() => setModalShow(true)}\n              >\n                Upraviť\n              </Button>\n              <ModalConfirm\n                show={modalShow}\n                title={\"Upraviť notifikácie\"}\n                body={\"Naozaj chceš upraviť notifikácie ?\"}\n                onSubmit={() => handleConfirm()}\n                onHide={() => setModalShow(false)}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </ErrorComponent>\n  );\n}\n\nexport default TheNotification;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/TheGarden.js",["198","199","200","201","202","203","204"],"import { useState, useEffect } from \"react\";\nimport PlantCard from \"../components/PlantCard\";\nimport SearchForm from \"../components/SearchForm\";\nimport DropdownFilter from \"../components/DropDownFilter\";\n\nimport { CardDeck, Container, Button, Nav, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MyVerticallyCenteredModal from \"../components/MyVerticallyCenteredModal\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\n\nfunction TheGarden() {\n  const axios = require(\"axios\");\n\n  const [categories, setCategories] = useState([]);\n  const [plants, setPlants] = useState([]);\n  const [categoryFilter, setCategoryFilter] = useState([]);\n  const [subcategoryFilter, setSubcategoryFilter] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [gardens, setGardens] = useState([]);\n  const [actualGardenName, setActualGardenName] = useState(\"\");\n  const [actualGardenSlug, setActualGardenSlug] = useState(\"\");\n  const [error, setError] = useState(false);\n  const handleError = useErrorHandler();\n\n\n  const fetchPlants = (id, name, slug) => {\n    setActualGardenName(name);\n    setActualGardenSlug(slug);\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/plants/garden/\" +id,\n      withCredentials: true,\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          setPlants(res.data);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        handleError(error);\n        console.error(error);\n      });\n  };\n\n  const fetchGardens = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/garden/all\",\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setGardens(res.data);\n          console.log(res.data);\n          if(res.data.length>0){\n            setActualGardenName(res.data[0].name);\n            setActualGardenSlug(res.data[0].slug);\n            fetchPlants(res.data[0].id, res.data[0].name, res.data[0].slug);\n          }\n        }else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const createGarden = (name, location) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/garden/\",\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      data: {\n        name: name,\n        location: location,\n      },\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          fetchGardens();\n        }else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n        handleError(error);\n      });\n  };\n\n  const handleFilter = (id) => {\n    console.log(id);\n    let newArray = [];\n    if (!categoryFilter.includes(id)) {\n      newArray = [...categoryFilter, id];\n    } else {\n      newArray = categoryFilter.filter((oldId) => id !== oldId);\n    }\n    setCategoryFilter(newArray);\n    console.log(newArray);\n  };\n\n  const handleSubmit = (name, location) => {\n    createGarden(name, location);\n    setModalShow(false);\n  };\n\n  const fetchCategories = () => {\n    axios.get(process.env.REACT_APP_API_URL + \"/categories\").then((res) => {\n      console.log(res.data);\n      setCategories(res.data);\n    });\n  };\n\n\n  useEffect(() => {\n    fetchCategories();\n    fetchGardens();\n  }, [error]);\n\n  // const mappedPlants = plants.map((plant) => {\n  //   return (\n  //     <Link to={\"/garden/detail/\" + plant.id}>\n  //       <PlantCard key={plant.id} plant={plant} />\n  //     </Link>\n  //   );\n  // });\n\n  return (\n    <ErrorComponent onReset={() => setError(true)}>\n    <div>\n      <Container className=\"pt-3\">\n        <Button\n          variant=\"info\"\n          className=\"mb-3\"\n          onClick={() => setModalShow(true)}\n        >\n          Pridať záhradu\n        </Button>\n        <MyVerticallyCenteredModal\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n          title={\"Pridať záhradu\"}\n          bodyTitle={\"Zadaj názov\"}\n          bodyText={\"addGarden\"}\n          bodySubTitle={\"Zadaj lokalitu\"}\n          onSubmit={handleSubmit}\n        />\n      </Container>\n\n      <Container>\n        {gardens.length > 1 ? (\n          <Nav variant=\"tabs\" defaultActiveKey={gardens[0].id} className=\"mb-3\">\n            {gardens.map((garden) => (\n              <Nav.Item onClick={() => fetchPlants(garden.id, garden.name, garden.slug)}>\n                <Nav.Link eventKey={garden.id}>{garden.name}</Nav.Link>\n              </Nav.Item>\n            ))}\n          </Nav>\n        ) : null}\n\n        {gardens.length>0 ? \n             (<Row>\n             <Col className=\"d-flex flex-column justify-content-center\">\n               <SearchForm onChange={setSearchString} value={searchString} />\n             </Col>\n             <Col>\n               <DropdownFilter\n                 categories={categories}\n                 categoryFilter={categoryFilter}\n                 handleFilter={handleFilter}\n               />\n             </Col>\n             <Col className=\"d-flex flex-row-reverse\">\n               <Link to={\"/garden/new/\" + actualGardenSlug}>\n                 <Button variant=\"info\"> Pridaj novú rastlinu </Button>{\" \"}\n               </Link>\n             </Col>\n           </Row>)\n        :null}\n\n        <CardDeck>\n          {plants\n            .filter((plant) =>\n              categoryFilter.length > 0\n                ? categoryFilter.includes(plant.subcategoryDto.category.id)\n                : plant\n            )\n            .filter((plant) =>\n              searchString.length >= 3\n                ? plant.name.toLowerCase().includes(searchString.toLowerCase())\n                : plant\n            )\n            .map((plant) => (\n              <Link key={plant.id} to={\"/garden/detail/\" + plant.id}>\n                <PlantCard key={plant.id} plant={plant} />\n              </Link>\n            ))}\n        </CardDeck>\n      </Container>\n    </div>\n    </ErrorComponent>\n  );\n}\n\nexport default TheGarden;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/MyHistory.js",["205","206","207","208","209","210","211","212","213","214","215","216"],"import ProfileStyle from \"../components/ProfileStyle\";\nimport contextValue from \"../appContext\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\n\nimport {\n  Container,\n  Row,\n  Form,\n  Col,\n  Button,\n  ListGroup,\n  ListGroupItem,\n} from \"react-bootstrap\";\n\nfunction MyHistory() {\n  const axios = require(\"axios\");\n  const params = useParams();\n  const [history, setHistory] = useState([]);\n  const [error, setError] = useState(false);\n  const handleError = useErrorHandler();\n\n  const makeFormattedDate = (oldDate) => {\n    let date = new Date(oldDate);\n    return date.toLocaleDateString() + \" \" + date.toLocaleTimeString();\n  };\n\n  const fetchHistory = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url:\n        process.env.REACT_APP_API_URL + \"/sensors/history_all/\" +\n        params.sensor +\n        \"/\" +\n        params.name,\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setHistory(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        handleError(error);\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    fetchHistory();\n  }, [error]);\n\n  return (\n    <ErrorComponent onReset={ () => setError(true)}>\n    <div>\n      <Container>\n        <ListGroup className=\"list-group-flush\">\n          {history.map((item) => (\n            <ListGroupItem className=\"d-flex flex-row justify-content-around\">\n              {\" \"}\n              <span>{makeFormattedDate(item.date)}</span>{\" \"}\n              <span>\n                {params.sensor == \"rain\"\n                  ? item.value == false\n                    ? \"Neprší\"\n                    : \"Prší\"\n                  : params.sensor == \"temperature\"\n                  ? item.value + \" °C\"\n                  : params.sensor == \"pressure\"\n                  ? item.value + \" hPa\"\n                  : item.value + \" %\"}\n              </span>\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Container>\n    </div>\n    </ErrorComponent>\n  );\n}\n\nexport default MyHistory;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/PlantDetail.js",["217","218","219","220"],"import { useHistory, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport PlantForm from \"../components/PlantForm\";\nimport ErrorComponent from \"../components/ErrorComponent\";\n\nfunction PlantDetail(props) {\n  const axios = require(\"axios\");\n  const [plant, setPlant] = useState(null);\n  const params = useParams();\n  const [modalShow, setModalShow] = useState(false);\n  const [minTemperature, setMinTemperature] = useState(null);\n  const [maxTemperature, setMaxTemperature] = useState(null);\n  const [season, setSeason] = useState(\"\");\n  const [error, setError] = useState(false);\n  let history = useHistory();\n\n  const fetchPlant = () => {\n    axios({\n      method: \"get\",\n      url: process.env.REACT_APP_API_URL + \"/plants/\" + params.id,\n      withCredentials: true,\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(res.data);\n          setPlant(res.data);\n          setMaxTemperature(res.data.maxTemperature);\n          setMinTemperature(res.data.minTemperature);\n          setSeason(res.data.season);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const updatePlant = (id) => {\n    axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"/plants/update\",\n      withCredentials: true,\n      data: {\n        id: id,\n        minTemperature: minTemperature,\n        maxTemperature: maxTemperature,\n        season: season,\n      },\n    })\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(res);\n          fetchPlant();\n          history.push(\"/garden\");\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleConfirmUpdate= (id) => {\n    updatePlant(id);\n    setModalShow(false);\n  };\n\n  const handleConfirmDelete= (id) => {\n    deletePlant(id);\n    setModalShow(false);\n  };\n\n  const deletePlant = (id) => {\n    console.log(id);\n    axios({\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      withCredentials: true,\n      data: {},\n      url: process.env.REACT_APP_API_URL + \"/plants/\" + id,\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.status == 200) {\n          history.push(\"/garden\");\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n\n  useEffect(() => {\n    fetchPlant();\n  }, [error]);\n\n  return (\n    <ErrorComponent onReset={() => setError(true)}>\n      <div>\n        <PlantForm\n          plant={plant}\n          handleConfirmUpdate={handleConfirmUpdate}\n          handleConfirmDelete={handleConfirmDelete}\n          modalShow={modalShow}\n          setModalShow={setModalShow}\n          setMinTemperature={setMinTemperature}\n          setMaxTemperature={setMaxTemperature}\n          setSeason={setSeason}\n        />\n      </div>\n    </ErrorComponent>\n  );\n}\n\nexport default PlantDetail;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/TheHome.js",["221","222","223","224","225","226","227","228","229"],"import { Container, CardDeck, Card, Button, Accordion } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport ModalSetSensorsTime from \"../components/ModalSetSensorsTime\";\nimport SensorsGarden from \"./SensorsGarden\";\nimport ErrorComponent from \"../components/ErrorComponent\";\nimport { useErrorHandler } from \"react-error-boundary\";\n\n\nfunction TheHome() {\n  const axios = require(\"axios\");\n  const [userTemp, setUserTemp] = useState(15);\n  const [minutes, setMinutes] = useState(15);\n  const [modalShowTemp, setModalShowTemp] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [gardenId, setGardenId] = useState(null);\n  const [gardens, setGardens] = useState([]);\n  const [error, setError] = useState(false);\n  const handleError = useErrorHandler();\n\n   const fetchGardens = () => {\n      axios({\n        method: \"get\",\n        withCredentials: true,\n        url: process.env.REACT_APP_API_URL + \"/garden/all\",\n      })\n        .then((res) => {\n          if ((res.status == 200)) {\n            setGardens(res.data);\n            console.log(res);\n          }else throw Error(res.status);\n        })\n        .catch((error) => {\n          handleError(error);\n          console.error(error);\n        });\n    };\n\n  const setRefreshData = () => {\n    axios.get(process.env.REACT_APP_API_URL + \"/sensors/request/\" + minutes);\n  };\n\n  const handleSubmit = (minutes) => {\n    setRefreshData(minutes);\n    setModalShow(false);\n  };\n\n  useEffect(() => {\n    fetchGardens();\n  }, [error]);\n\n  return (\n    <ErrorComponent onReset={ () => setError(true)}>\n    <div>\n      <Container fluid className=\"pt-3 w-75\">\n        <div className=\"d-flex justify-content-between\">\n          <div className=\"d-flex align-items-baseline\">\n            <h6>\n              Interval merania je {minutes} min\n            </h6>\n            <Button\n              variant=\"info\"\n              className=\"mb-4 ml-2\"\n              onClick={() => setModalShow(true)}\n            >\n              Zmeniť\n            </Button>\n          </div>\n          <ModalSetSensorsTime\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n          title={\"Zmeň časový interval merania senzorov\"}\n          bodyTitle={\"Vyber časový interval v min:\"}\n          bodyText={\"interval\"}\n          setMinutes={setMinutes}\n          minutes={minutes}\n          onSubmit={handleSubmit}\n        />\n        </div>\n\n        {gardens.map(garden =>(\n          <Accordion defaultActiveKey=\"1\">\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              {garden.name}\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n              {<SensorsGarden gardenId={garden.id} gardenName={garden.name}></SensorsGarden>}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n        ))}\n      </Container>\n    </div>\n    </ErrorComponent>\n  );\n}\n\nexport default TheHome;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/MyProfile.js",["230","231","232","233","234","235"],"import ProfileStyle from \"../components/ProfileStyle\";\nimport contextValue from \"../appContext\";\nimport { useContext } from \"react\";\n\nimport { Container, Row, Form, Col, Button } from \"react-bootstrap\";\n\nfunction MyProfile() {\n  let context = useContext(contextValue);\n  console.log(context.user);\n  const picture = context.user.gender==\"WOMAN\" ? \"assets/gardenwoman.png\" : \"assets/gardener.png\";\n\n  return (\n    <div>\n      <ProfileStyle picture={picture} user={context.user} />\n    </div>\n  );\n}\n\nexport default MyProfile;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/SelectPlants.js",["236","237","238","239","240","241"],"import { useState, useEffect } from \"react\";\nimport { Form, Card, CardGroup, Row, Col } from \"react-bootstrap\";\nimport ErrorComponent from \"../components/ErrorComponent\";\n\nfunction SelectPlants(props) {\n  const axios = require(\"axios\");\n  const [plants, setPlants] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getSubcategoryPlants();\n  }, [props, props.plant]);\n\n  const getSubcategoryPlants = () => {\n    if (\n      props.category !== \"\" &&\n      props.subcategory !== \"\" &&\n      props.subcategory !== \"default\" &&\n      props.category !== \"default\"\n    ) {\n      axios({\n        method: \"get\",\n        url:\n          process.env.REACT_APP_API_URL + \"/plants/\" +\n          props.category +\n          \"/\" +\n          props.subcategory,\n        withCredentials: true,\n      })\n        .then((res) => {\n          if (res.status == 200) {\n            console.log(res);\n            setPlants(res.data);\n          } else throw Error(res.status);\n        })\n        .catch((error) => {\n          console.log(\"ERRRRROOOOOOOOOR\");\n          console.error(error);\n        });\n    }\n  };\n\n  return (\n    <ErrorComponent onReset={() => setError(true)}>\n      <Col style={{ overflow: \"scroll\", minWidth: \"50%\", height: \"500px\" }}>\n        Vyber rastlinu\n        {props.subcategory !== \"\" && props.subcategory !== \"default\"\n          ? plants.map((plant) => (\n              <CardGroup\n                className={props.plant !== null && props.plant.id == plant.id  ? \"mt-2 block-example border border-success\" : \"mt-2\"}\n                onClick={() => {\n                  props.setActualPlantInfo(plant);\n                }}\n              >\n                <Card\n                  className=\"mr-0\"\n                  style={{ maxWidth: \"200px\", maxHeight: \"200px\" }}\n                >\n                  <div className=\"d-flex justify-content-center bg-light\">\n                    <Card.Img\n                      variant=\"top\"\n                      src={process.env.REACT_APP_API_URL + \"/gallery/\" + plant.picture}\n                      style={{ maxWidth: \"200px\", maxHeight: \"200px\" }}\n                    />\n                  </div>\n                </Card>\n                <Card className=\"mr-0\">\n                  <Card.Body>\n                    <Card.Title style={{ color: \"green\" }}>\n                      {plant.name}\n                    </Card.Title>\n                    <Card.Title>Min: {plant.minTemperature}</Card.Title>\n                    <Card.Title>Max: {plant.maxTemperature}</Card.Title>\n                    <Card.Title>Sezóna: {plant.season}</Card.Title>\n                  </Card.Body>\n                </Card>\n              </CardGroup>\n            ))\n          : null}\n      </Col>\n    </ErrorComponent>\n  );\n}\n\nexport default SelectPlants;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/TheSpinner.js",[],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ModalAddValving.js",[],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ModalConfirm.js",[],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ValveCard.js",["242","243"],"import { Card, CardColumns, CardGroup, Button } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MyVerticallyCenteredModal from \"./MyVerticallyCenteredModal\";\n\nfunction ValveCard(props) {\n  \n  const styleImg = {\n    maxHeight: \"150px\",\n    maxWidth: \"150px\",\n  };\n\n  const sensor = props.sensor;\n  const [modalShowGardens, setModalShowGardens] = useState(false);\n  const [modalShowValving, setModalShowValving] = useState(false);\n\n  const handleSubmitGardens = (gardens) =>{\n      console.log(gardens);\n      props.updateGardens(props.valve.id, gardens);\n      setModalShowGardens(false);\n  }\n\n  const handleSubmitImmediately = (length) =>{\n    console.log(length);\n    props.valvingImmediately(props.valve.name, length);\n    setModalShowValving(false);\n}\n    \n  useEffect(() => {\n\n  }, [props.valve.gardens])\n\n\n  return (\n    <CardGroup>\n      <Card className=\"mb-4 mr-0\">\n        <Card.Img variant=\"top\" src={props.valve.picture} style={styleImg} />\n        <Card.Body>\n          <Card.Title>Polievač {props.number}</Card.Title>\n          <Card.Text>\n            V záhrade:\n            <Card.Text>{props.valve.gardens.map((garden, index) => <span>{garden.name}{index<props.valve.gardens.length-1 ? \", \": \" \"} </span>)}\n            </Card.Text>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n      <Card className=\"mb-4 mr-0\">\n        <Card.Body>\n            <Button variant=\"info\" className=\"mt-2 mr-2\"\n             onClick={() => setModalShowValving(true)}\n            >\n              Zalej ihneď!\n            </Button>\n            <MyVerticallyCenteredModal\n            show={modalShowValving}\n            onHide={() => setModalShowValving(false)}\n            title={\"Zalej ihneď!\"}\n            bodyTitle = {\"Zadaj dĺžku zalievania (v min):\"}\n            bodyText={\"immediately\"}\n            onSubmit={handleSubmitImmediately}\n          />\n          <Link to={\"/valving/schedule/\" + props.valve.name}>\n            <Button variant=\"info\" className=\"mt-2 mr-2\">\n              Pravidelné polievanie\n            </Button>\n          </Link>\n          <Button\n            variant=\"info\"\n            className=\"mt-2 mr-2\"\n            onClick={() => setModalShowGardens(true)}\n          >\n            Pridať/odobrať záhradu\n          </Button>\n          <MyVerticallyCenteredModal\n            show={modalShowGardens}\n            onHide={() => setModalShowGardens(false)}\n            title={\"Pridať/odobrať záhradu\"}\n            bodyTitle = {\"Vyber z možností:\"}\n            bodyText={\"gardens\"}\n            gardens={props.gardens}\n            onSubmit={handleSubmitGardens}\n          />\n        </Card.Body>\n      </Card>\n    </CardGroup>\n  );\n}\n\nexport default ValveCard;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/MyVerticallyCenteredModal.js",[],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/PlantCard.js",[],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/SearchForm.js",["244","245"],"import {\n  FormControl,\n  InputGroup,\n  Button,\n  Container,\n  Image,\n} from \"react-bootstrap\";\n\nfunction SearchForm(props) {\n  const searchImg = \"../assets/magnifying-glass-1976105.svg\";\n  return (\n    <div>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>\n              <Image src={searchImg} alt=\"search\" width=\"20\" />\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            aria-describedby=\"basic-addon1\"\n            value={props.value}\n            onChange={(e) => {\n              props.onChange(e.target.value);\n            }}\n          />\n        </InputGroup>\n    </div>\n  );\n}\n\nexport default SearchForm;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ProfileStyle.js",["246"],"import { Container, Col, Row, Image } from \"react-bootstrap\";\nimport context from \"react-bootstrap/esm/AccordionContext\";\n\nfunction ProfileStyle(props) {\n  const pic = props.picture;\n  const username = props.user.firstName + \" \" + props.user.lastName;\n\n  return (\n    <Container className=\"mt-3\">\n      <Row className=\"d-flex justify-content-center\">\n        <Col className=\"text-center\" xs={6} md={4}>\n          <Image\n            src={pic}\n            style={{ height: \"auto\", width: \"70%\" }}\n            roundedCircle\n          />\n        </Col>\n      </Row>\n      <Row className=\"d-flex justify-content-center mt-3\">\n        <Col className=\"text-center\" xs={6} md={4}>\n          <h1>{username}</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"text-center\">\n          <h6>{props.user.email}</h6>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ProfileStyle;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/DropDownFilter.js",["247","248"],"import { Container, Form, Row } from \"react-bootstrap\";\nimport GardenFilterCheckbox from \"../components/GardenFilterCheckbox\";\n\nfunction DropdownFilter(props) {\n  const categories = props.categories;\n  const categoryFilter = props.categoryFilter;\n  const handleFilter = props.handleFilter;\n\n  let count = 0;\n  const mappedCategories = categories.map((category) => {\n    count++;\n    return <GardenFilterCheckbox key={count} item={category} checked={categoryFilter.includes(category.id)} handleFilter={handleFilter}/>;\n  });\n\n  return (\n    <div>\n      Filtruj podľa:\n      <Form>{mappedCategories}\n      </Form>\n    </div>\n  );\n}\n\nexport default DropdownFilter;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/ModalSetSensorsTime.js",[],"/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/PlantForm.js",["249","250","251"],"import { Form, Row, Col, Container, Button } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport TheSpinner from \"../components/TheSpinner\";\nimport ModalConfirm from \"../components/ModalConfirm\";\n\nfunction PlantForm(props) {\n  let plant = props.plant;\n  console.log(plant);\n  const [modal, setModal] = useState(false);\n\n  if (plant == null) {\n    return <TheSpinner></TheSpinner>;\n  }\n\n  return (\n    <div>\n      <Container>\n        <Row>\n          <Col>\n            <h1 className=\"text-center\">{plant.name}</h1>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className=\"d-flex flex-row-reverse mb-3\">\n            <img\n              src={process.env.REACT_APP_API_URL + \"/gallery/\" + plant.picture}\n              class=\"img-fluid rounded mx-auto\"\n              alt={plant.name}\n              style={{ maxWidth: \"400px\", maxHeight: \"400px\" }}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Form>\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column sm=\"2\">\n                  Najnižšia možná teplota:\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control defaultValue={plant.minTemperature} onChange={(e) => {\n                  props.setMinTemperature(e.target.value);\n                }}/>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column sm=\"2\">\n                  Najvyššia možná teplota:\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control defaultValue={plant.maxTemperature} onChange={(e) => {\n                  props.setMaxTemperature(e.target.value);\n                }}/>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column sm=\"2\">\n                  Dátum výsadby:\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control defaultValue={plant.dateOfPlant} />\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column sm=\"2\">\n                  Obdobie dozrievania:\n                </Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control defaultValue={plant.season} onChange={(e) => {\n                  props.setSeason(e.target.value);\n                }}/>\n                </Col>\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n\n        <Row className=\"mb-3\">\n          <Col className=\"d-flex justify-content-center\">\n            <Button\n              variant=\"outline-success\"\n              onClick={() => props.setModalShow(true)}\n            >\n              Upraviť\n            </Button>\n            <ModalConfirm\n              show={props.modalShow}\n              title={\"Upraviť dáta rastliny\"}\n              body={\"Naozaj chceš upraviť dáta rastliny \" + plant.name + \"?\"}\n              onSubmit={() => props.handleConfirmUpdate(plant.id)}\n              onHide={() => props.setModalShow(false)}\n            />\n          </Col>\n          <Col className=\"d-flex justify-content-center\">\n            <Button\n              variant=\"outline-danger\"\n              onClick={() => props.setModalShow(true)}\n            >\n              Vymazať rastlinu\n            </Button>\n            <ModalConfirm\n              show={props.modalShow}\n              title={\"Vymazať vybranú rastlinu\"}\n              body={\"Naozaj chceš vymazať rastlinu \" + plant.name + \"?\"}\n              onSubmit={() => props.handleConfirmDelete(plant.id)}\n              onHide={() => props.setModalShow(false)}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default PlantForm;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/views/SensorsGarden.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274"],"import { Container, CardDeck, Button } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport SensorCard from \"../components/SensorCard\";\n\nfunction SensorsGarden(props) {\n  const axios = require(\"axios\");\n  const [temperature, setTemperature] = useState(null);\n  const [temperatureHistory, setTemperatureHistory] = useState([]);\n  const [humidity, setHumidity] = useState(null);\n  const [humidityHistory, setHumidityHistory] = useState([]);\n  const [pressure, setPressure] = useState(null);\n  const [pressureHistory, setPressureHistory] = useState([]);\n  const [soil, setSoil] = useState(null);\n  const [soilHistory, setSoilHistory] = useState([]);\n  const [rain, setRain] = useState(null);\n  const [rainHistory, setRainHistory] = useState([]);\n\n  const fetchTemperature = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/temperature/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200) && (res.data != \"\")) {\n          setTemperature(res.data);\n          console.log(res);\n        } else if((res.status != 200)) throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHistoryTemperature = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/temperature/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setTemperatureHistory(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchSoil = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/soil/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200) && (res.data != \"\")) {\n          setSoil(res.data);\n          console.log(res);\n        } \n        else if((res.status != 200)) throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHistorySoil = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/soil/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setSoilHistory(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchPressure = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/pressure/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200) && (res.data != \"\")) {\n          setPressure(res.data);\n          console.log(res);\n        } else if((res.status != 200)) throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHistoryPressure = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/pressure/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setPressureHistory(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHumidity = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/humidity/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200) && (res.data != \"\")) {\n          setHumidity(res.data);\n          console.log(res);\n          console.log(\"humidity\");\n        } else if((res.status != 200)) throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHistoryHumidity = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/humidity/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setHumidityHistory(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchRain = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/rain/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200) && (res.data != \"\")) {\n          setRain(res.data);\n          console.log(res);\n        } else if((res.status != 200)) throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const fetchHistoryRain = () => {\n    axios({\n      method: \"get\",\n      withCredentials: true,\n      url: process.env.REACT_APP_API_URL + \"/sensors/history/rain/\" + props.gardenId,\n    })\n      .then((res) => {\n        if ((res.status == 200)) {\n          setRainHistory(res.data);\n          console.log(res);\n        } else throw Error(res.status);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    fetchTemperature();\n    fetchHumidity();\n    fetchPressure();\n    fetchRain();\n    fetchSoil();\n    fetchHistoryRain();\n    fetchHistorySoil();\n    fetchHistoryHumidity();\n    fetchHistoryTemperature();\n    fetchHistoryPressure();\n  }, []);\n\n  return (\n    <div>\n          <CardDeck className=\"d-xl-flex justify-content-lg-center\">\n            <SensorCard\n              key=\"temperature\"\n              pathName=\"temperature\"\n              sensor={temperature}\n              name=\"Teplota\"\n              text={temperature !== null ? temperature.value + \" °C\" : \"Senzor nie je dostupný\"}\n              gardenName={props.gardenName}\n              history={temperatureHistory.map((temperature) => {\n                return { date: temperature.date, value: temperature.value + \" °C\" };\n              })}\n              picture=\"assets/sensors/teplomer.png\"\n            ></SensorCard>\n            <SensorCard\n              key=\"pressure\"\n              pathName=\"pressure\"\n              sensor={pressure}\n              name=\"Tlak vzduchu\"\n              text={pressure !== null ? pressure.value + \" hPa\" : \"Senzor nie je dostupný\"}\n              gardenName={props.gardenName}\n              history={pressureHistory.map((pressure) => {\n                return { date: pressure.date, value: pressure.value + \" hPa\" };\n              })}\n              picture=\"assets/sensors/pressure.png\"\n            ></SensorCard>\n            <SensorCard\n              key=\"humidity\"\n              pathName=\"humidity\"\n              sensor={humidity}\n              name=\"Vlhkosť vzduchu\"\n              text={humidity !== null ? humidity.value + \" %\" : \"Senzor nie je dostupný\"}\n              gardenName={props.gardenName}\n              history={humidityHistory.map((humidity) => {\n                return { date: humidity.date, value: humidity.value + \" %\" };\n              })}\n              picture=\"assets/sensors/humidity.png\"\n            ></SensorCard>\n            <SensorCard\n              key=\"soil\"\n              pathName=\"soil\"\n              sensor={soil}\n              name=\"Vlhkosť pôdy\"\n              text={soil !== null ? soil.value + \" %\" : \"Senzor nie je dostupný\"}\n              gardenName={props.gardenName}\n              history={soilHistory.map((soil) => {\n                return { date: soil.date, value: soil.value + \" %\" };\n              })}\n              picture=\"assets/sensors/soil.png\"\n            ></SensorCard>\n            {rain != null ? (\n              <SensorCard\n                key=\"rain\"\n                pathName=\"rain\"\n                sensor={rain}\n                name=\"Zrážky\"\n                gardenName={props.gardenName}\n                history={rainHistory.map((rain) => {\n                  return {\n                    date: rain.date,\n                    value: rain.raining ? \"Prší\" : \"Neprší\",\n                  };\n                })}\n                text={rain.raining ? \"Prší\" : \"V tomto okamžiku neprší\"}\n                picture={\n                  rain.raining\n                    ? \"assets/sensors/rain.jpg\"\n                    : \"assets/sensors/sun.jpg\"\n                }\n              ></SensorCard>\n            ) : null}\n          </CardDeck>\n    </div>\n  );\n}\n\nexport default SensorsGarden;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/GardenFilterCheckbox.js",["275"],"import { Container, Form } from \"react-bootstrap\";\n\nfunction GardenFilterCheckbox(props) {\n  const item = props.item;\n  const checked = props.checked;\n\n  return (\n          <Form.Check inline defaultChecked={checked} onClick={() => props.handleFilter(item.id)} label={item.name} type=\"checkbox\" id={item.id} />\n  );\n}\n\nexport default GardenFilterCheckbox;\n","/Users/sandra/bakalarka/SmartGarden/smartgardenGitHub/frontend/src/components/SensorCard.js",[],{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":26,"column":10,"nodeType":"282","messageId":"283","endLine":26,"endColumn":15},{"ruleId":"284","severity":1,"message":"285","line":56,"column":45,"nodeType":"286","messageId":"287","endLine":56,"endColumn":47},{"ruleId":"288","severity":1,"message":"289","line":59,"column":6,"nodeType":"282","endLine":59,"endColumn":12},{"ruleId":"288","severity":1,"message":"290","line":59,"column":6,"nodeType":"282","endLine":59,"endColumn":12,"suggestions":"291"},{"ruleId":"280","severity":1,"message":"292","line":3,"column":20,"nodeType":"282","messageId":"283","endLine":3,"endColumn":29},{"ruleId":"280","severity":1,"message":"293","line":8,"column":9,"nodeType":"282","messageId":"283","endLine":8,"endColumn":14},{"ruleId":"284","severity":1,"message":"285","line":27,"column":22,"nodeType":"286","messageId":"287","endLine":27,"endColumn":24},{"ruleId":"280","severity":1,"message":"294","line":8,"column":3,"nodeType":"282","messageId":"283","endLine":8,"endColumn":7},{"ruleId":"280","severity":1,"message":"295","line":9,"column":3,"nodeType":"282","messageId":"283","endLine":9,"endColumn":11},{"ruleId":"280","severity":1,"message":"296","line":10,"column":3,"nodeType":"282","messageId":"283","endLine":10,"endColumn":12},{"ruleId":"280","severity":1,"message":"297","line":14,"column":8,"nodeType":"282","messageId":"283","endLine":14,"endColumn":18},{"ruleId":"288","severity":1,"message":"298","line":38,"column":6,"nodeType":"299","endLine":38,"endColumn":13,"suggestions":"300"},{"ruleId":"284","severity":1,"message":"285","line":47,"column":24,"nodeType":"286","messageId":"287","endLine":47,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":80,"column":24,"nodeType":"286","messageId":"287","endLine":80,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":152,"column":63,"nodeType":"286","messageId":"287","endLine":152,"endColumn":65},{"ruleId":"284","severity":1,"message":"285","line":40,"column":24,"nodeType":"286","messageId":"287","endLine":40,"endColumn":26},{"ruleId":"280","severity":1,"message":"295","line":2,"column":3,"nodeType":"282","messageId":"283","endLine":2,"endColumn":11},{"ruleId":"280","severity":1,"message":"301","line":5,"column":3,"nodeType":"282","messageId":"283","endLine":5,"endColumn":7},{"ruleId":"280","severity":1,"message":"302","line":26,"column":7,"nodeType":"282","messageId":"283","endLine":26,"endColumn":14},{"ruleId":"284","severity":1,"message":"285","line":46,"column":24,"nodeType":"286","messageId":"287","endLine":46,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":76,"column":24,"nodeType":"286","messageId":"287","endLine":76,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":100,"column":24,"nodeType":"286","messageId":"287","endLine":100,"endColumn":26},{"ruleId":"288","severity":1,"message":"303","line":118,"column":6,"nodeType":"299","endLine":118,"endColumn":13,"suggestions":"304"},{"ruleId":"284","severity":1,"message":"285","line":154,"column":29,"nodeType":"286","messageId":"287","endLine":154,"endColumn":31},{"ruleId":"284","severity":1,"message":"285","line":156,"column":33,"nodeType":"286","messageId":"287","endLine":156,"endColumn":35},{"ruleId":"284","severity":1,"message":"285","line":158,"column":33,"nodeType":"286","messageId":"287","endLine":158,"endColumn":35},{"ruleId":"284","severity":1,"message":"285","line":160,"column":33,"nodeType":"286","messageId":"287","endLine":160,"endColumn":35},{"ruleId":"284","severity":1,"message":"285","line":162,"column":33,"nodeType":"286","messageId":"287","endLine":162,"endColumn":35},{"ruleId":"284","severity":1,"message":"285","line":164,"column":33,"nodeType":"286","messageId":"287","endLine":164,"endColumn":35},{"ruleId":"284","severity":1,"message":"285","line":166,"column":33,"nodeType":"286","messageId":"287","endLine":166,"endColumn":35},{"ruleId":"284","severity":1,"message":"285","line":37,"column":24,"nodeType":"286","messageId":"287","endLine":37,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":76,"column":24,"nodeType":"286","messageId":"287","endLine":76,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":94,"column":24,"nodeType":"286","messageId":"287","endLine":94,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":117,"column":24,"nodeType":"286","messageId":"287","endLine":117,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":123,"column":35,"nodeType":"286","messageId":"287","endLine":123,"endColumn":37},{"ruleId":"288","severity":1,"message":"305","line":142,"column":6,"nodeType":"299","endLine":142,"endColumn":24,"suggestions":"306"},{"ruleId":"284","severity":1,"message":"285","line":34,"column":24,"nodeType":"286","messageId":"287","endLine":34,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":51,"column":24,"nodeType":"286","messageId":"287","endLine":51,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":69,"column":24,"nodeType":"286","messageId":"287","endLine":69,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":91,"column":24,"nodeType":"286","messageId":"287","endLine":91,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":108,"column":24,"nodeType":"286","messageId":"287","endLine":108,"endColumn":26},{"ruleId":"288","severity":1,"message":"307","line":127,"column":6,"nodeType":"299","endLine":127,"endColumn":13,"suggestions":"308"},{"ruleId":"280","severity":1,"message":"309","line":18,"column":10,"nodeType":"282","messageId":"283","endLine":18,"endColumn":27},{"ruleId":"280","severity":1,"message":"310","line":18,"column":29,"nodeType":"282","messageId":"283","endLine":18,"endColumn":49},{"ruleId":"280","severity":1,"message":"311","line":22,"column":10,"nodeType":"282","messageId":"283","endLine":22,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":37,"column":24,"nodeType":"286","messageId":"287","endLine":37,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":54,"column":25,"nodeType":"286","messageId":"287","endLine":54,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":85,"column":24,"nodeType":"286","messageId":"287","endLine":85,"endColumn":26},{"ruleId":"288","severity":1,"message":"312","line":123,"column":6,"nodeType":"299","endLine":123,"endColumn":13,"suggestions":"313"},{"ruleId":"280","severity":1,"message":"314","line":1,"column":8,"nodeType":"282","messageId":"283","endLine":1,"endColumn":20},{"ruleId":"280","severity":1,"message":"315","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":20},{"ruleId":"280","severity":1,"message":"316","line":10,"column":3,"nodeType":"282","messageId":"283","endLine":10,"endColumn":6},{"ruleId":"280","severity":1,"message":"301","line":11,"column":3,"nodeType":"282","messageId":"283","endLine":11,"endColumn":7},{"ruleId":"280","severity":1,"message":"317","line":12,"column":3,"nodeType":"282","messageId":"283","endLine":12,"endColumn":6},{"ruleId":"280","severity":1,"message":"318","line":13,"column":3,"nodeType":"282","messageId":"283","endLine":13,"endColumn":9},{"ruleId":"284","severity":1,"message":"285","line":41,"column":25,"nodeType":"286","messageId":"287","endLine":41,"endColumn":27},{"ruleId":"288","severity":1,"message":"319","line":54,"column":6,"nodeType":"299","endLine":54,"endColumn":13,"suggestions":"320"},{"ruleId":"284","severity":1,"message":"285","line":66,"column":32,"nodeType":"286","messageId":"287","endLine":66,"endColumn":34},{"ruleId":"284","severity":1,"message":"285","line":67,"column":32,"nodeType":"286","messageId":"287","endLine":67,"endColumn":34},{"ruleId":"284","severity":1,"message":"285","line":70,"column":35,"nodeType":"286","messageId":"287","endLine":70,"endColumn":37},{"ruleId":"284","severity":1,"message":"285","line":72,"column":35,"nodeType":"286","messageId":"287","endLine":72,"endColumn":37},{"ruleId":"284","severity":1,"message":"285","line":24,"column":24,"nodeType":"286","messageId":"287","endLine":24,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":50,"column":24,"nodeType":"286","messageId":"287","endLine":50,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":85,"column":24,"nodeType":"286","messageId":"287","endLine":85,"endColumn":26},{"ruleId":"288","severity":1,"message":"321","line":97,"column":6,"nodeType":"299","endLine":97,"endColumn":13,"suggestions":"322"},{"ruleId":"280","severity":1,"message":"295","line":1,"column":21,"nodeType":"282","messageId":"283","endLine":1,"endColumn":29},{"ruleId":"280","severity":1,"message":"323","line":11,"column":10,"nodeType":"282","messageId":"283","endLine":11,"endColumn":18},{"ruleId":"280","severity":1,"message":"324","line":11,"column":20,"nodeType":"282","messageId":"283","endLine":11,"endColumn":31},{"ruleId":"280","severity":1,"message":"325","line":13,"column":10,"nodeType":"282","messageId":"283","endLine":13,"endColumn":23},{"ruleId":"280","severity":1,"message":"326","line":13,"column":25,"nodeType":"282","messageId":"283","endLine":13,"endColumn":41},{"ruleId":"280","severity":1,"message":"327","line":15,"column":10,"nodeType":"282","messageId":"283","endLine":15,"endColumn":18},{"ruleId":"280","severity":1,"message":"328","line":15,"column":20,"nodeType":"282","messageId":"283","endLine":15,"endColumn":31},{"ruleId":"284","severity":1,"message":"285","line":27,"column":27,"nodeType":"286","messageId":"287","endLine":27,"endColumn":29},{"ruleId":"288","severity":1,"message":"329","line":49,"column":6,"nodeType":"299","endLine":49,"endColumn":13,"suggestions":"330"},{"ruleId":"280","severity":1,"message":"331","line":5,"column":10,"nodeType":"282","messageId":"283","endLine":5,"endColumn":19},{"ruleId":"280","severity":1,"message":"316","line":5,"column":21,"nodeType":"282","messageId":"283","endLine":5,"endColumn":24},{"ruleId":"280","severity":1,"message":"301","line":5,"column":26,"nodeType":"282","messageId":"283","endLine":5,"endColumn":30},{"ruleId":"280","severity":1,"message":"317","line":5,"column":32,"nodeType":"282","messageId":"283","endLine":5,"endColumn":35},{"ruleId":"280","severity":1,"message":"318","line":5,"column":37,"nodeType":"282","messageId":"283","endLine":5,"endColumn":43},{"ruleId":"284","severity":1,"message":"285","line":10,"column":38,"nodeType":"286","messageId":"287","endLine":10,"endColumn":40},{"ruleId":"280","severity":1,"message":"301","line":2,"column":10,"nodeType":"282","messageId":"283","endLine":2,"endColumn":14},{"ruleId":"280","severity":1,"message":"316","line":2,"column":33,"nodeType":"282","messageId":"283","endLine":2,"endColumn":36},{"ruleId":"280","severity":1,"message":"281","line":8,"column":10,"nodeType":"282","messageId":"283","endLine":8,"endColumn":15},{"ruleId":"288","severity":1,"message":"332","line":12,"column":6,"nodeType":"299","endLine":12,"endColumn":26,"suggestions":"333"},{"ruleId":"284","severity":1,"message":"285","line":31,"column":26,"nodeType":"286","messageId":"287","endLine":31,"endColumn":28},{"ruleId":"284","severity":1,"message":"285","line":50,"column":67,"nodeType":"286","messageId":"287","endLine":50,"endColumn":69},{"ruleId":"280","severity":1,"message":"334","line":1,"column":16,"nodeType":"282","messageId":"283","endLine":1,"endColumn":27},{"ruleId":"280","severity":1,"message":"335","line":13,"column":9,"nodeType":"282","messageId":"283","endLine":13,"endColumn":15},{"ruleId":"280","severity":1,"message":"318","line":4,"column":3,"nodeType":"282","messageId":"283","endLine":4,"endColumn":9},{"ruleId":"280","severity":1,"message":"331","line":5,"column":3,"nodeType":"282","messageId":"283","endLine":5,"endColumn":12},{"ruleId":"280","severity":1,"message":"336","line":2,"column":8,"nodeType":"282","messageId":"283","endLine":2,"endColumn":15},{"ruleId":"280","severity":1,"message":"331","line":1,"column":10,"nodeType":"282","messageId":"283","endLine":1,"endColumn":19},{"ruleId":"280","severity":1,"message":"316","line":1,"column":27,"nodeType":"282","messageId":"283","endLine":1,"endColumn":30},{"ruleId":"280","severity":1,"message":"292","line":2,"column":20,"nodeType":"282","messageId":"283","endLine":2,"endColumn":29},{"ruleId":"280","severity":1,"message":"337","line":9,"column":10,"nodeType":"282","messageId":"283","endLine":9,"endColumn":15},{"ruleId":"280","severity":1,"message":"338","line":9,"column":17,"nodeType":"282","messageId":"283","endLine":9,"endColumn":25},{"ruleId":"280","severity":1,"message":"331","line":1,"column":10,"nodeType":"282","messageId":"283","endLine":1,"endColumn":19},{"ruleId":"280","severity":1,"message":"318","line":1,"column":31,"nodeType":"282","messageId":"283","endLine":1,"endColumn":37},{"ruleId":"284","severity":1,"message":"285","line":25,"column":25,"nodeType":"286","messageId":"287","endLine":25,"endColumn":27},{"ruleId":"284","severity":1,"message":"339","line":25,"column":46,"nodeType":"286","messageId":"287","endLine":25,"endColumn":48},{"ruleId":"284","severity":1,"message":"339","line":28,"column":31,"nodeType":"286","messageId":"287","endLine":28,"endColumn":33},{"ruleId":"284","severity":1,"message":"285","line":42,"column":25,"nodeType":"286","messageId":"287","endLine":42,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":59,"column":25,"nodeType":"286","messageId":"287","endLine":59,"endColumn":27},{"ruleId":"284","severity":1,"message":"339","line":59,"column":46,"nodeType":"286","messageId":"287","endLine":59,"endColumn":48},{"ruleId":"284","severity":1,"message":"339","line":63,"column":29,"nodeType":"286","messageId":"287","endLine":63,"endColumn":31},{"ruleId":"284","severity":1,"message":"285","line":77,"column":25,"nodeType":"286","messageId":"287","endLine":77,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":94,"column":25,"nodeType":"286","messageId":"287","endLine":94,"endColumn":27},{"ruleId":"284","severity":1,"message":"339","line":94,"column":46,"nodeType":"286","messageId":"287","endLine":94,"endColumn":48},{"ruleId":"284","severity":1,"message":"339","line":97,"column":31,"nodeType":"286","messageId":"287","endLine":97,"endColumn":33},{"ruleId":"284","severity":1,"message":"285","line":111,"column":25,"nodeType":"286","messageId":"287","endLine":111,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":128,"column":25,"nodeType":"286","messageId":"287","endLine":128,"endColumn":27},{"ruleId":"284","severity":1,"message":"339","line":128,"column":46,"nodeType":"286","messageId":"287","endLine":128,"endColumn":48},{"ruleId":"284","severity":1,"message":"339","line":132,"column":31,"nodeType":"286","messageId":"287","endLine":132,"endColumn":33},{"ruleId":"284","severity":1,"message":"285","line":146,"column":25,"nodeType":"286","messageId":"287","endLine":146,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":163,"column":25,"nodeType":"286","messageId":"287","endLine":163,"endColumn":27},{"ruleId":"284","severity":1,"message":"339","line":163,"column":46,"nodeType":"286","messageId":"287","endLine":163,"endColumn":48},{"ruleId":"284","severity":1,"message":"339","line":166,"column":31,"nodeType":"286","messageId":"287","endLine":166,"endColumn":33},{"ruleId":"284","severity":1,"message":"285","line":180,"column":25,"nodeType":"286","messageId":"287","endLine":180,"endColumn":27},{"ruleId":"288","severity":1,"message":"340","line":201,"column":6,"nodeType":"299","endLine":201,"endColumn":8,"suggestions":"341"},{"ruleId":"280","severity":1,"message":"331","line":1,"column":10,"nodeType":"282","messageId":"283","endLine":1,"endColumn":19},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useLayoutEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useLayoutEffect has missing dependencies: 'isAuth' and 'login'. Either include them or remove the dependency array.",["344"],"'useEffect' is defined but never used.","'axios' is assigned a value but never used.","'Card' is defined but never used.","'CardDeck' is defined but never used.","'CardGroup' is defined but never used.","'TheSpinner' is defined but never used.","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["345"],"'Form' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSchedules'. Either include it or remove the dependency array.",["346"],"React Hook useEffect has missing dependencies: 'fetchGardens' and 'fetchValves'. Either include them or remove the dependency array.",["347"],"React Hook useEffect has missing dependencies: 'fetchHighTemp', 'fetchLowTemp', and 'fetchNotifications'. Either include them or remove the dependency array.",["348"],"'subcategoryFilter' is assigned a value but never used.","'setSubcategoryFilter' is assigned a value but never used.","'actualGardenName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchCategories' and 'fetchGardens'. Either include them or remove the dependency array.",["349"],"'ProfileStyle' is defined but never used.","'contextValue' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchHistory'. Either include it or remove the dependency array.",["350"],"React Hook useEffect has a missing dependency: 'fetchPlant'. Either include it or remove the dependency array.",["351"],"'userTemp' is assigned a value but never used.","'setUserTemp' is assigned a value but never used.","'modalShowTemp' is assigned a value but never used.","'setModalShowTemp' is assigned a value but never used.","'gardenId' is assigned a value but never used.","'setGardenId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchGardens'. Either include it or remove the dependency array.",["352"],"'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'getSubcategoryPlants'. Either include it or remove the dependency array.",["353"],"'CardColumns' is defined but never used.","'sensor' is assigned a value but never used.","'context' is defined but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'fetchHistoryHumidity', 'fetchHistoryPressure', 'fetchHistoryRain', 'fetchHistorySoil', 'fetchHistoryTemperature', 'fetchHumidity', 'fetchPressure', 'fetchRain', 'fetchSoil', and 'fetchTemperature'. Either include them or remove the dependency array.",["354"],"no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},"Update the dependencies array to be: [isAuth, login]",{"range":"377","text":"378"},"Update the dependencies array to be: [error, getCategories]",{"range":"379","text":"380"},"Update the dependencies array to be: [error, fetchSchedules]",{"range":"381","text":"382"},"Update the dependencies array to be: [modalShow, error, fetchGardens, fetchValves]",{"range":"383","text":"384"},"Update the dependencies array to be: [error, fetchHighTemp, fetchLowTemp, fetchNotifications]",{"range":"385","text":"386"},"Update the dependencies array to be: [error, fetchCategories, fetchGardens]",{"range":"387","text":"388"},"Update the dependencies array to be: [error, fetchHistory]",{"range":"389","text":"390"},"Update the dependencies array to be: [error, fetchPlant]",{"range":"391","text":"392"},"Update the dependencies array to be: [error, fetchGardens]",{"range":"393","text":"394"},"Update the dependencies array to be: [getSubcategoryPlants, props, props.plant]",{"range":"395","text":"396"},"Update the dependencies array to be: [fetchHistoryHumidity, fetchHistoryPressure, fetchHistoryRain, fetchHistorySoil, fetchHistoryTemperature, fetchHumidity, fetchPressure, fetchRain, fetchSoil, fetchTemperature]",{"range":"397","text":"398"},[1893,1899],"[isAuth, login]",[1286,1293],"[error, getCategories]",[2981,2988],"[error, fetchSchedules]",[3711,3729],"[modalShow, error, fetchGardens, fetchValves]",[3046,3053],"[error, fetchHighTemp, fetchLowTemp, fetchNotifications]",[3560,3567],"[error, fetchCategories, fetchGardens]",[1338,1345],"[error, fetchHistory]",[2547,2554],"[error, fetchPlant]",[1519,1526],"[error, fetchGardens]",[380,400],"[getSubcategoryPlants, props, props.plant]",[5601,5603],"[fetchHistoryHumidity, fetchHistoryPressure, fetchHistoryRain, fetchHistorySoil, fetchHistoryTemperature, fetchHumidity, fetchPressure, fetchRain, fetchSoil, fetchTemperature]"]